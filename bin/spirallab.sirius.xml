<?xml version="1.0"?>
<doc>
    <assembly>
        <name>spirallab.sirius</name>
    </assembly>
    <members>
        <member name="T:SpiralLab.Sirius.UndoRedoEntitySort">
            <summary>
            엔티티 정렬 (순서)
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.UndoRedoEntityHatch">
            <summary>
            엔티티 해치하기
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.UndoRedoEntityPasteArray">
            <summary>
            엔티티 붙혀넣기 (배열)
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.UndoRedoEntityRotate">
            <summary>
            엔티티 회전
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.Barcode1D">
            <summary>
            barcode 1d entity
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.Barcode1D.Clone">
            <summary>
            복사본 생성
            </summary>
            <returns>A new color that is a copy of this instance.</returns>
        </member>
        <member name="M:SpiralLab.Sirius.Barcode1D.Mark(SpiralLab.Sirius.IMarkerArg)">
            <summary>
            laser processing
            </summary>
            <param name="markerArg"></param>
            <returns></returns>
        </member>
        <member name="T:SpiralLab.Sirius.BarcodeQR">
            <summary>
            barcode qr code entity
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.BarcodeQR.Clone">
            <summary>
            복사본 생성
            </summary>
            <returns>A new color that is a copy of this instance.</returns>
        </member>
        <member name="M:SpiralLab.Sirius.BarcodeQR.Mark(SpiralLab.Sirius.IMarkerArg)">
            <summary>
            laser processing
            </summary>
            <param name="markerArg"></param>
            <returns></returns>
        </member>
        <member name="T:SpiralLab.Sirius.MotfBegin">
            <summary>
            Motf Begin 엔티티 객체
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.MotfBegin.Clone">
            <summary>
            복사본 생성
            </summary>
            <returns>A new color that is a copy of this instance.</returns>
        </member>
        <member name="M:SpiralLab.Sirius.MotfBegin.Mark(SpiralLab.Sirius.IMarkerArg)">
            <summary>
            laser processing
            </summary>
            <param name="rtc"></param>
            <param name="laser"></param>
            <returns></returns>
        </member>
        <member name="T:SpiralLab.Sirius.MotfEnd">
            <summary>
            Motf End 엔티티 객체 
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.MotfEnd.Clone">
            <summary>
            복사본 생성
            </summary>
            <returns>A new color that is a copy of this instance.</returns>
        </member>
        <member name="M:SpiralLab.Sirius.MotfEnd.Mark(SpiralLab.Sirius.IMarkerArg)">
            <summary>
            laser processing
            </summary>
            <param name="rtc"></param>
            <param name="laser"></param>
            <returns></returns>
        </member>
        <member name="T:SpiralLab.Sirius.MotfExternalStartDelay">
            <summary>
            Motf Ext Start Delay 엔티티 객체
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.MotfExternalStartDelay.Clone">
            <summary>
            복사본 생성
            </summary>
            <returns>A new color that is a copy of this instance.</returns>
        </member>
        <member name="M:SpiralLab.Sirius.MotfExternalStartDelay.Mark(SpiralLab.Sirius.IMarkerArg)">
            <summary>
            laser processing
            </summary>
            <param name="rtc"></param>
            <param name="laser"></param>
            <returns></returns>
        </member>
        <member name="T:SpiralLab.Sirius.MotfWait">
            <summary>
            Motf Wait 엔티티 객체
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.MotfWait.Clone">
            <summary>
            복사본 생성
            </summary>
            <returns>A new color that is a copy of this instance.</returns>
        </member>
        <member name="M:SpiralLab.Sirius.MotfWait.Mark(SpiralLab.Sirius.IMarkerArg)">
            <summary>
            laser processing
            </summary>
            <param name="rtc"></param>
            <param name="laser"></param>
            <returns></returns>
        </member>
        <member name="T:SpiralLab.Sirius.PenMotf">
            <summary>
            Pen Motf 엔티티 객체 (기본 버전에서 상속된 파생 펜)
            entity 에 motf begin/end/wait 등이 추가되어 불필요해짐 !!!
            deprecated version 
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.PenMotf.Clone">
            <summary>
            복사본 생성
            </summary>
            <returns>A new color that is a copy of this instance.</returns>
        </member>
        <member name="M:SpiralLab.Sirius.PenMotf.Equals(SpiralLab.Sirius.PenMotf)">
            <summary>
            동일성 검사
            </summary>
            <param name="other">Another color to compare to.</param>
            <returns>True if the three components are equal or false in any other case.</returns>
        </member>
        <member name="M:SpiralLab.Sirius.PenMotf.Mark(SpiralLab.Sirius.IMarkerArg)">
            <summary>
            laser processing
            </summary>
            <param name="rtc"></param>
            <param name="laser"></param>
            <returns></returns>
        </member>
        <member name="T:SpiralLab.Sirius.SiriusTextArc">
            <summary>
            sirius text arc entity
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.SiriusTextArc.Clone">
            <summary>
            복사본 생성
            </summary>
            <returns>A new color that is a copy of this instance.</returns>
        </member>
        <member name="T:SpiralLab.Sirius.SiriusText">
            <summary>
            sirius text entity
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.SiriusText.Clone">
            <summary>
            복사본 생성
            </summary>
            <returns>A new color that is a copy of this instance.</returns>
        </member>
        <member name="T:SpiralLab.Sirius.SiriusTextTime">
            <summary>
            sirius text time entity
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.SiriusTextTime.Clone">
            <summary>
            복사본 생성
            </summary>
            <returns>A new color that is a copy of this instance.</returns>
        </member>
        <member name="T:SpiralLab.Sirius.SiriusTextDate">
            <summary>
            sirius text date entity
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.SiriusTextDate.Clone">
            <summary>
            복사본 생성
            </summary>
            <returns>A new color that is a copy of this instance.</returns>
        </member>
        <member name="T:SpiralLab.Sirius.SiriusTextSerial">
            <summary>
            sirius text serial entity
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.SiriusTextSerial.Clone">
            <summary>
            복사본 생성
            </summary>
            <returns>A new color that is a copy of this instance.</returns>
        </member>
        <member name="T:SpiralLab.Sirius.TextArc">
            <summary>
            텍스트 Arc 엔티티 (TTF 폰트)
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.TextArc.Clone">
            <summary>
            복사본 생성
            </summary>
            <returns>A new color that is a copy of this instance.</returns>
        </member>
        <member name="T:SpiralLab.Sirius.TextTime">
            <summary>
            텍스트 Time 엔티티 (TTF 폰트)
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.TextTime.Clone">
            <summary>
            복사본 생성
            </summary>
            <returns>A new color that is a copy of this instance.</returns>
        </member>
        <member name="M:SpiralLab.Sirius.TextTime.Mark(SpiralLab.Sirius.IMarkerArg)">
            <summary>
            laser processing
            </summary>
            <param name="rtc"></param>
            <param name="laser"></param>
            <returns></returns>
        </member>
        <member name="T:SpiralLab.Sirius.TextSerial">
            <summary>
            텍스트 Serial 엔티티 (TTF 폰트)
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.TextSerial.Clone">
            <summary>
            복사본 생성
            </summary>
            <returns>A new color that is a copy of this instance.</returns>
        </member>
        <member name="M:SpiralLab.Sirius.TextSerial.Mark(SpiralLab.Sirius.IMarkerArg)">
            <summary>
            laser processing
            </summary>
            <param name="rtc"></param>
            <param name="laser"></param>
            <returns></returns>
        </member>
        <member name="T:SpiralLab.Sirius.TextDate">
            <summary>
            텍스트 Date 엔티티 (TTF 폰트)
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.TextDate.Clone">
            <summary>
            복사본 생성
            </summary>
            <returns>A new color that is a copy of this instance.</returns>
        </member>
        <member name="M:SpiralLab.Sirius.TextDate.Mark(SpiralLab.Sirius.IMarkerArg)">
            <summary>
            laser processing
            </summary>
            <param name="rtc"></param>
            <param name="laser"></param>
            <returns></returns>
        </member>
        <member name="T:SpiralLab.Sirius.Trepan">
            <summary>
            circle entity
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.Trepan.Clone">
            <summary>
            복사본 생성
            </summary>
            <returns>A new color that is a copy of this instance.</returns>
        </member>
        <member name="M:SpiralLab.Sirius.Trepan.Mark(SpiralLab.Sirius.IMarkerArg)">
            <summary>
            laser processing
            </summary>
            <param name="rtc"></param>
            <returns></returns>
        </member>
        <member name="P:SpiralLab.Sirius.CxfHelper.CapitalHeight">
            <summary>
            대문자 높이
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.CxfHelper.XHeight">
            <summary>
            소문자 높이
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.CxfHelper.Ascender">
            <summary>
            https://medium.com/edinbed/calarts-funds-of-graphic-design-w2-2-2-words-and-spacing-b0ce031a3c77
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.CxfHelper.Descender">
            <summary>
            https://medium.com/edinbed/calarts-funds-of-graphic-design-w2-2-2-words-and-spacing-b0ce031a3c77
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.CxfHelper.Author">
            <summary>
            폰트 파일에 지정된 저자
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.CxfHelper.Name">
            <summary>
            폰트파일에 지정된 이름
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.CxfHelper.Encoding">
            <summary>
            폰트 파일에 지정된 엔코딩 포맷
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.CxfHelper.LetterSpacing">
            <summary>
            폰트 파일에 지정된 글자간 간격
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.CxfHelper.WordSpacing">
            <summary>
            폰트 파일에 지정된 단어간 간격 (like as space bar)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.CxfHelper.LineSpacing">
            <summary>
            폰트 파일에 지정된 줄간 간격 (new line space)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.CxfHelper.BBox">
            <summary>
            Bound Box
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.CxfFontCollectionHelper">
            <summary>
            CXF 폰트 모음을 관리하는 정적 객체
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.ICharacterSetInfo">
            <summary>
            문자열 집합 정보 인터페이스
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.CxfCharacterSetInfo">
            <summary>
            Cxf 폰트용 CharacterSet Info 객체
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.CxfCharacterSetInfo.Equals(SpiralLab.Sirius.CxfCharacterSetInfo)">
            <summary>
            다를 경우 RTC 에 캐릭터 집합을 다운로드
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="T:SpiralLab.Sirius.TTFCharacterSetInfo">
            <summary>
            TTF 폰트용 CharacterSet Info 객체
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.TTFCharacterSetInfo.Equals(SpiralLab.Sirius.TTFCharacterSetInfo)">
            <summary>
            다를 경우 RTC 에 캐릭터 집합을 다운로드
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="T:SpiralLab.Sirius.RtcCharacterSetHelper">
            <summary>
            Character Set 을 최대 4개까지 유지하기 위한 헬퍼
            SiriusTextDate, Time, Serial 을 사용할 경우 항상
            IMarker Ready 실행시 Clear 를 하여 RTC 리스트 3 버퍼가 삭제되도록 유도한다
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.RtcCharacterSetHelper.Regen(SpiralLab.Sirius.IRtc,SpiralLab.Sirius.ICharacterSetInfo,SpiralLab.Sirius.CharacterSet@)">
            <summary>
            RTC 에 해당 색인 문자 집합을 다운로드 한다
            이때 4개의 문자집합중 하나로 설정된다
            </summary>
            <param name="rtc">IRtcCharacter 인터페이스</param>
            <param name="info">다운로드할 문자집합 정보</param>
            <param name="characterSet">문자집합 인덱스 번호 (0,1,2,3)</param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.RtcCharacterSetHelper.Clear(SpiralLab.Sirius.IRtc)">
            <summary>
            문자집합 초기화
            RTC내의 메모리도 초기화
            </summary>
            <param name="rtc">IRtcCharacter 인터페이스</param>
        </member>
        <member name="M:SpiralLab.Sirius.RtcCharacterSetHelper.RegisterCxf(SpiralLab.Sirius.IRtc,SpiralLab.Sirius.CxfCharacterSetInfo,SpiralLab.Sirius.CharacterSet)">
            <summary>
            실제 RTC에 다운로드 하는 루틴
            </summary>
            <param name="rtc"></param>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="T:SpiralLab.Sirius.MarkerArgDefault">
            <summary>
            마커 인자 전달 객체
            기본 버전
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.MarkerArgDefault.Document">
            <summary>
            가공 데이타 객체
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.MarkerArgDefault.Rtc">
            <summary>
            RTC 객체
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.MarkerArgDefault.Laser">
            <summary>
            레이저 객체
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.MarkerArgDefault.ScannerRotateAngle">
            <summary>
            스캐너가 회전되어 장착되어 있는 경우
            지정된 각도만큼 내부에서 회전 처리된다 (오프셋 역시 처리됨)
            사용자가 정면에서 보았을때 직교좌표계가 될수있도록 회전각도를 설정한다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.MarkerArgDefault.Offsets">
            <summary>
            동일한 형상(Doc)을 여러번 오프셋으로 가공할때의 위치 정보 
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.MarkerArgDefault.#ctor">
            <summary>
            생성자
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.IMarkerArg">
            <summary>
            마커 인자 인터페이스
            가공 인자 전달용
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IMarkerArg.Document">
            <summary>
            가공 데이타 객체
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IMarkerArg.Rtc">
            <summary>
            RTC 객체
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IMarkerArg.Laser">
            <summary>
            레이저 객체
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IMarkerArg.ScannerRotateAngle">
            <summary>
            스캐너가 회전되어 장착되어 있는 경우
            지정된 각도만큼 내부에서 회전 처리된다 (오프셋 역시 처리됨)
            사용자가 정면에서 보았을때 직교좌표계가 될수있도록 회전각도를 설정한다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IMarkerArg.Offsets">
            <summary>
            동일한 형상(Doc)을 여러번 오프셋으로 가공할때의 위치 정보 
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.ConcurrentList`1">
            <summary>
            리스트 제네릭 컨테이너를 쓰레드 안전 (thread safe) 하도록 한 동기화 리스트 객체
            </summary>
            <typeparam name="T">데이타 타입</typeparam>
        </member>
        <member name="T:SpiralLab.Sirius.HatchMode">
            <summary>
            해치 모드
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius.HatchMode.Line">
            <summary>
            선 해치 (+ 지그재그)
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.IHatchable">
            <summary>
            Hatchable 인터페이스
            해치 기능을 제공해야 하는 엔티티가 상속 구현해야 하는 인터페이스
            폐(댣힌) 영역을 가진 엔티티에 대해서만 동작
            </summary>    
        </member>
        <member name="M:SpiralLab.Sirius.IHatchable.Hatch(SpiralLab.Sirius.HatchMode,System.Single,System.Single,System.Single)">
            <summary>
            해치 인자를 통해 해칭된 그룹 객체를 얻는다
            </summary>
            <param name="mode">해치 모드</param>
            <param name="angle">해치 각도</param>
            <param name="interval">해치 간격 (mm)</param>
            <param name="exclude">해치 외부 제외 영역 길이 (mm)</param>
            <returns></returns>
        </member>
        <member name="T:SpiralLab.Sirius.LwPolyLineVertex">
            <summary>
            LW(Light-Weighted) 폴리라인 엔티티용 정점(vertex) 객체
            Autocad 의 LWPolyline 을 모사함
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.LwPolyLineVertex.X">
            <summary>
            X 값
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.LwPolyLineVertex.Y">
            <summary>
            Y 값
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.LwPolyLineVertex.Bulge">
            <summary>
            Bulge 값 (1/4 atan)
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.LwPolyLineVertex.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            constructor
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="bulge"></param>
        </member>
        <member name="M:SpiralLab.Sirius.LwPolyLineVertex.Equals(SpiralLab.Sirius.LwPolyLineVertex)">
            <summary>
            동일성 검사
            </summary>
            <param name="other">Another color to compare to.</param>
            <returns>True if the three components are equal or false in any other case.</returns>
        </member>
        <member name="M:SpiralLab.Sirius.LwPolyLineVertex.ToString">
            <summary>
            문자열
            </summary>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.LwPolyLineVertex.Translate(SpiralLab.Sirius.LwPolyLineVertex,System.Numerics.Vector2)">
            <summary>
            이동
            </summary>
            <param name="vertex"></param>
            <param name="delta"></param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.LwPolyLineVertex.Rotate(SpiralLab.Sirius.LwPolyLineVertex,System.Single,System.Numerics.Vector2)">
            <summary>
            회전
            </summary>
            <param name="vertex"></param>
            <param name="angle"></param>
            <param name="rotateCenter"></param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.LwPolyLineVertex.Scale(SpiralLab.Sirius.LwPolyLineVertex,System.Numerics.Vector2)">
            <summary>
            크기변환
            </summary>
            <param name="vertex"></param>
            <param name="scale"></param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.LwPolyLineVertex.Scale(SpiralLab.Sirius.LwPolyLineVertex,System.Numerics.Vector2,System.Numerics.Vector2)">
            <summary>
            크기변환
            </summary>
            <param name="vertex"></param>
            <param name="scale"></param>
            <param name="center"></param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.LwPolyLineVertex.op_Subtraction(SpiralLab.Sirius.LwPolyLineVertex,SpiralLab.Sirius.LwPolyLineVertex)">
            <summary>
            두 폴리라인 벡터의 차
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.LwPolyLineVertex.Distance(SpiralLab.Sirius.LwPolyLineVertex,SpiralLab.Sirius.LwPolyLineVertex)">
            <summary>
            두 폴리라인 벡터의 거리
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.LwPolyLineVertex.Angle(SpiralLab.Sirius.LwPolyLineVertex,SpiralLab.Sirius.LwPolyLineVertex)">
            <summary>
            두 폴리라인 벡터가 이루는 각도
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.LwPolyLineVertex.Angle(SpiralLab.Sirius.LwPolyLineVertex)">
            <summary>
            지정된 폴리라인 벡터의 회전 각도
            </summary>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="T:SpiralLab.Sirius.Offset">
            <summary>
            오프셋(X,Y,회전) 정보를 가지는 구조체
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Offset.X">
            <summary>
            X 위치
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Offset.Y">
            <summary>
            Y 위치
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Offset.Angle">
            <summary>
            회전량 (각도)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Offset.Tag">
            <summary>
            사용자 정의 데이타
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.Offset.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            생성자
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="angle"></param>
        </member>
        <member name="M:SpiralLab.Sirius.Offset.#ctor(System.Numerics.Vector2,System.Single)">
            <summary>
            생성자
            </summary>
            <param name="v"></param>
            <param name="angle"></param>
        </member>
        <member name="M:SpiralLab.Sirius.Offset.Translate(SpiralLab.Sirius.Offset,System.Single,System.Single)">
            <summary>
            이동량
            </summary>
            <param name="o"></param>
            <param name="dx"></param>
            <param name="dy"></param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.Offset.Translate(SpiralLab.Sirius.Offset,System.Numerics.Vector2)">
            <summary>
            이동량
            </summary>
            <param name="o"></param>
            <param name="delta"></param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.Offset.Rotate(SpiralLab.Sirius.Offset,System.Single,System.Numerics.Vector2)">
            <summary>
            회전량
            </summary>
            <param name="o"></param>
            <param name="angle"></param>
            <param name="rotateCenter"></param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.Offset.Scale(SpiralLab.Sirius.Offset,System.Numerics.Vector2)">
            <summary>
            회전량
            </summary>
            <param name="o"></param>
            <param name="scale"></param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.Offset.Scale(SpiralLab.Sirius.Offset,System.Numerics.Vector2,System.Numerics.Vector2)">
            <summary>
            크기 변화량
            </summary>
            <param name="o"></param>
            <param name="scale"></param>
            <param name="center"></param>
            <returns></returns>
        </member>
        <member name="P:SpiralLab.Sirius.Offset.Zero">
            <summary>
            0 값으로 초기화된 객체 반환
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Offset.ToVector2">
            <summary>
            Vector2 구조체로 변환된 값 반환 (X, Y 성분만)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Offset.ToMatrix">
            <summary>
            3x3 행렬값으로 계산된 값 반환 (X, Y, 회전성분 포함)
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.Offset.ToString">
            <summary>
            문자열 
            </summary>
            <returns></returns>
        </member>
        <member name="T:SpiralLab.Sirius.EntityAlign">
            <summary>
            엔티티 정렬(위치) 기준
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius.EntityAlign.Left">
            <summary>
            좌측
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius.EntityAlign.Right">
            <summary>
            우측
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius.EntityAlign.Origin">
            <summary>
            기준점
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius.EntityAlign.Top">
            <summary>
            상단
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius.EntityAlign.Bottom">
            <summary>
            하단
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.EntitySort">
            <summary>
            엔티티 정렬(순서) 기준
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.Action">
            <summary>
            액션 객체 (사용자의 모든 이벤트를 기록하여 undo/redo 처리하기 위한 행위 객체)
            사용자의 행위를 Undo 하기 위해서는 모든 사용자 명령이 Action 내의 Undo / Redo Stack 에서 관리되어야 한다 !
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.Action.EntitySelectedChangedEvent">
            <summary>
            선택된 엔티티 목록이 변경된것을 통지하는 이벤트 델리게이트
            </summary>
            <param name="doc"></param>
            <param name="list"></param>
        </member>
        <member name="E:SpiralLab.Sirius.Action.OnEntitySelectedChanged">
            <summary>
            선택된 엔티티 변경 통지 이벤트
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Action.SelectedEntity">
            <summary>
            선택된 엔티티 리스트
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Action.ClipBoard">
            <summary>
            클립보드 (복사, 잘라내기, 붙혀넣기를 위한 임시 공간)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Action.UndoRedoEnable">
            <summary>
            Undo/Reco 사용 여부
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius.Action.NewLayerIndex">
            <summary>
            새로운 레이어 생성시 증가되는 전역 레이어 번호
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.Action.#ctor(SpiralLab.Sirius.IDocument)">
            <summary>
            constructor (생성자)
            </summary>
            <param name="owner">부모 문서(document)</param>
        </member>
        <member name="M:SpiralLab.Sirius.Action.Finalize">
            <summary>
            소멸자
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.Action.Insert(SpiralLab.Sirius.IUndoRedo)">
            <summary>
            Undo/Redo 스택에 명령 삽입 (UndoRedoEnable 으로 삽입 여부 처리가능)
            </summary>
            <param name="ur"></param>
        </member>
        <member name="M:SpiralLab.Sirius.Action.UndoRedoClear">
            <summary>
            Undo/Redo 스택 정리
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.Action.ActUndo">
            <summary>
            Undo 명령
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.Action.ActRedo">
            <summary>
            Redo 명령
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.Action.ActNew">
            <summary>
            신규 문서(Doc) 생성
            </summary>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.Action.ActSave(System.String)">
            <summary>
            문서(Doc) 저장
            </summary>
            <param name="fileName">파일이름</param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.Action.ActImportDxf(System.String)">
            <summary>
            dxf 파일 가져오기
            </summary>
            <param name="fileName">파일이름</param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.Action.ActImportSirius(System.String)">
            <summary>
            sirius 파일 가져오기
            </summary>
            <param name="fileName">파일이름</param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.Action.ActDocumentPropertyChanged(SpiralLab.Sirius.IDocument,System.String,System.Object,System.Object)">
            <summary>
            DOC 의 속성 변경 명령
            </summary>
            <param name="doc">문서</param>
            <param name="propName">속성이름</param>
            <param name="oldValue">변경전 값</param>
            <param name="newValue">변경후 값</param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.Action.ActLayerActive(SpiralLab.Sirius.Layer)">
            <summary>
            활성화 레이어 변경 명령
            </summary>
            <param name="layer">대상 레이어</param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.Action.ActLayerDragMove(SpiralLab.Sirius.Layer,SpiralLab.Sirius.Layer,System.Int32)">
            <summary>
            레이어의 순서를 변경 명령
            </summary>
            <param name="layer">현재 레이어</param>
            <param name="targetLayer">대상 레이어</param>
            <param name="targetIndex">순서 인덱스 번호</param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.Action.ActEntityAdd(SpiralLab.Sirius.IEntity,SpiralLab.Sirius.Layer)">
            <summary>
            단일 엔티티 추가 명령
            </summary>
            <param name="entity">선택 엔티티</param>
            <param name="layer">대상 레이어</param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.Action.ActEntityAdd(System.Collections.Generic.List{SpiralLab.Sirius.IEntity},SpiralLab.Sirius.Layer)">
            <summary>
            다중 엔티티 추가 명령
            </summary>
            <param name="entities">선택 엔티티 리스트</param>
            <param name="layer">대상 레이어</param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.Action.ActEntitySelect(System.Collections.Generic.List{SpiralLab.Sirius.IEntity})">
            <summary>
            엔티티 선택 명령
            </summary>
            <param name="eneities">선택 엔티티 리스트</param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.Action.ActEntityGroup(System.Collections.Generic.List{SpiralLab.Sirius.IEntity},SpiralLab.Sirius.Layer)">
            <summary>
            지정된 엔티티들을 그룹으로 변환 명령
            </summary>
            <param name="entities">선택 엔티티 리스트</param>
            <param name="layer">대상 레이어</param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.Action.ActEntityUngroup(System.Collections.Generic.List{SpiralLab.Sirius.IEntity},SpiralLab.Sirius.Layer)">
            <summary>
            지정된 그룹들을 개별 엔티티로 변환 명령
            </summary>
            <param name="entities">선택 엔티티 리스트</param>
            <param name="layer">대상 레이어</param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.Action.ActEntityDelete(System.Collections.Generic.List{SpiralLab.Sirius.IEntity})">
            <summary>
            지정된 엔티티 삭제 명령
            </summary>
            <param name="entities">선택 엔티티 리스트</param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.Action.ActEntityAlign(System.Collections.Generic.List{SpiralLab.Sirius.IEntity},SpiralLab.Sirius.EntityAlign)">
            <summary>
            지정된 엔티티 위치 이동 명령
            복수의 객체의 경우 해당 객체들을 둘러싸는 영역(BoundRect)을 기준으로 동작
            하나의 객체의 경우 Document 의 가로 세로 크기를 기준으로 동작
            </summary>
            <param name="entities">선택 엔티티 리스트</param>
            <param name="align">정렬 기준</param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.Action.ActEntityTransit(System.Collections.Generic.List{SpiralLab.Sirius.IEntity},System.Single,System.Single)">
            <summary>
            지정된 엔티티의 위치를 특정한 양 만큼 이동 명령
            </summary>
            <param name="entities">선택 엔티티 리스트</param>
            <param name="dx">X 이동량 </param>
            <param name="dy">Y 이동량 </param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.Action.ActEntityDragMove(System.Collections.Generic.List{SpiralLab.Sirius.IEntity},SpiralLab.Sirius.Layer,System.Int32)">
            <summary>
            지정된 엔티티의 순서를 변경하는 명령
            </summary>
            <param name="entities">선택 엔티티 리스트</param>
            <param name="targetLayer">대상 레이어</param>
            <param name="targetIndex">대상 레이어 인덱스 번호</param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.Action.ActEntityExplode(System.Collections.Generic.List{SpiralLab.Sirius.IEntity},SpiralLab.Sirius.Layer)">
            <summary>
            지정된 엔티티를 분해하여 추가하고 원본 엔티티는 삭제함
            </summary>
            <param name="entities">선택 엔티티 리스트</param>
            <param name="layer">대상 레이어</param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.Action.ActEntityHatch(System.Collections.Generic.List{SpiralLab.Sirius.IEntity},SpiralLab.Sirius.HatchMode,System.Single,System.Single,System.Single,SpiralLab.Sirius.Layer)">
            <summary>
            지정된 엔티티가 닫힌 형태라면 해치 패턴을 추가하고 이를 신규 그룹 개체로 생성한다. 
            </summary>
            <param name="entities">엔티티 리스트</param>
            <param name="mode">해치 모드</param>
            <param name="angle">해치 각도</param>
            <param name="interval">해치 간격</param>
            <param name="exclude">해치 외곽 제외 영역</param>
            <param name="layer">대상 레이어</param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.Action.ActEntityRotate(System.Collections.Generic.List{SpiralLab.Sirius.IEntity},System.Single,System.Single,System.Single)">
            <summary>
            선택된 엔티티들을 cx, cy 를 중심으로 회전한다
            </summary>
            <param name="entities">엔티티 리스트</param>
            <param name="angle">각도</param>
            <param name="cx">중심 X</param>
            <param name="cy">중심 Y</param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.Action.ActEntityCut(System.Collections.Generic.List{SpiralLab.Sirius.IEntity})">
            <summary>
            지정된 엔티티들을 Cut 하는 명령 (삭제후 클립보드로 복사됨)
            </summary>
            <param name="entities">엔티티 리스트</param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.Action.ActEntityCopy(System.Collections.Generic.List{SpiralLab.Sirius.IEntity})">
            <summary>
            지정된 엔티티들을 Copy 하는 명령(삭제되지 않고 클립보드로 복사됨)
            </summary>
            <param name="entities">엔티티 리스트</param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.Action.ActEntityPaste(SpiralLab.Sirius.Layer,System.Single,System.Single)">
            <summary>
            클립보드에 있는 엔티티 를 복제하여 붙여넣기 함 (신규 엔티티가 생성됨)
            </summary>
            <param name="layer">레이어</param>
            <param name="x">X 위치</param>
            <param name="y">Y 위치</param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.Action.ActEntityPasteArray(SpiralLab.Sirius.Layer,System.Collections.Generic.List{System.Numerics.Vector2},System.Single,System.Single)">
            <summary>
            클립보드에 있는 엔티티를 복제하여 배열 붙혀넣기 (신규 엔티티가 생성됨)
            </summary>
            <param name="layer">레이어</param>
            <param name="targetLocations">대상 위치 목록</param>
            <param name="x">기준 X 위치</param>
            <param name="y">기준 Y 위치</param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.Action.ActEntityPropertyChanged(System.Collections.Generic.List{SpiralLab.Sirius.IEntity},System.String,System.Object,System.Object)">
            <summary>
            지정된 엔티티의 속성을 변경하는 명령
            </summary>
            <param name="entities">엔티티 리스트</param>
            <param name="propName">속성 이름</param>
            <param name="oldValue">변경전 값</param>
            <param name="newValue">변경후 값</param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.Action.HitTest(System.Windows.Forms.Keys,System.Single,System.Single,System.Single)">
            <summary>
            마우스 클릭등의 한점을 지정하여 엔티티 선택 명령 (Undo/Redo 스택에 처리 않됨)
            </summary>
            <param name="keys">특수키(ctrl, alt, shift, ...)</param>
            <param name="x">X 위치</param>
            <param name="y">Y 위치</param>
            <param name="threshold">문턱값</param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.Action.HitTest(System.Windows.Forms.Keys,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            마우스를 이용해 사각 영역(Rubber Band)을 지정하여 엔티티 선택 명령 (Undo/Redo 스택에 처리 않됨)
            </summary>
            <param name="keys">특수키(ctrl, alt, shift, ...)</param>
            <param name="downX">시작 영역 X</param>
            <param name="downY">시작 영역 Y</param>
            <param name="currentX">현재 영역 X</param>
            <param name="currentY">현재 영역 Y</param>
            <param name="threshold">문턱값</param>
            <returns></returns>
        </member>
        <member name="T:SpiralLab.Sirius.AciColor">
            <summary>
            색상 객체
            AutoCad 의 색상 객체를 표현 (ACI color - AutoCAD Color Index)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.AciColor.ByLayer">
            <summary>
            Gets the ByLayer color.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.AciColor.ByBlock">
            <summary>
            Gets the ByBlock color.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.AciColor.Red">
            <summary>
            Defines a default red color.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.AciColor.Yellow">
            <summary>
            Defines a default yellow color.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.AciColor.Green">
            <summary>
            Defines a default green color.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.AciColor.Cyan">
            <summary>
            Defines a default cyan color.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.AciColor.Blue">
            <summary>
            Defines a default blue color.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.AciColor.Magenta">
            <summary>
            Defines a default magenta color.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.AciColor.Default">
            <summary>
            Defines a default white/black color.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.AciColor.DarkGray">
            <summary>
            Defines a default dark gray color.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.AciColor.LightGray">
            <summary>
            Defines a default light gray color.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.AciColor.IndexRgb">
            <summary>
            A dictionary that contains the indexed colors, the key represents the color index and the value the RGB components of the color.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.AciColor.#ctor">
            <summary>
            Initializes a new instance of the <c>AciColor</c> class with black/white color index 7.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.AciColor.#ctor(System.Byte,System.Byte,System.Byte)">
             <summary>
             Initializes a new instance of the <c>AciColor</c> class.
             </summary>
            <param name="r">Red component.</param>
            <param name="g">Green component.</param>
            <param name="b">Blue component.</param>
        </member>
        <member name="M:SpiralLab.Sirius.AciColor.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <c>AciColor</c> class.
            </summary>
            <param name="r">Red component.</param>
            <param name="g">Green component.</param>
            <param name="b">Blue component.</param>
            <remarks>By default the UseTrueColor will be set to true.</remarks>
        </member>
        <member name="M:SpiralLab.Sirius.AciColor.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <c>AciColor</c> class.
            </summary>
            <param name="r">Red component.</param>
            <param name="g">Green component.</param>
            <param name="b">Blue component.</param>
            <remarks>By default the UseTrueColor will be set to true.</remarks>
        </member>
        <member name="M:SpiralLab.Sirius.AciColor.#ctor(System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <c>AciColor</c> class.
            </summary>
            <param name="color">A <see cref="T:System.Drawing.Color">color</see>.</param>
            <remarks>By default the UseTrueColor will be set to true.</remarks>
        </member>
        <member name="M:SpiralLab.Sirius.AciColor.#ctor(System.Int16)">
            <summary>
            Initializes a new instance of the <c>AciColor</c> class.
            </summary>
            <param name="index">Color index.</param>
            <remarks>
            By default the UseTrueColor will be set to false.<br />
            Accepted color index values range from 1 to 255.<br />
            Indexes from 1 to 255 represents a color, the index 0 and 256 are reserved for ByLayer and ByBlock colors.
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius.AciColor.IsByLayer">
            <summary>
            Defines if the color is defined by layer.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.AciColor.IsByBlock">
            <summary>
            Defines if the color is defined by block.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.AciColor.R">
            <summary>
            Gets the red component of the AciColor.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.AciColor.G">
            <summary>
            Gets the green component of the AciColor.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.AciColor.B">
            <summary>
            Gets the blue component of the AciColor.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.AciColor.Index">
            <summary>
            Gets or sets the color index.
            </summary>
            <remarks>
            Accepted color index values range from 1 to 255.
            Indexes from 1 to 255 represents a color, the index 0 and 256 are reserved for ByLayer and ByBlock colors.
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius.AciColor.FromHsl(System.Numerics.Vector3)">
            <summary>
            Converts HSL (hue, saturation, lightness) value to an <see cref="T:SpiralLab.Sirius.AciColor">AciColor</see>.
            </summary>
            <param name="hsl">A Vector3 containing the hue, saturation, and lightness components.</param>
            <returns>An <see cref="T:System.Drawing.Color">AciColor</see> that represents the actual HSL value.</returns>
        </member>
        <member name="M:SpiralLab.Sirius.AciColor.FromHsl(System.Double,System.Double,System.Double)">
            <summary>
            Converts HSL (hue, saturation, lightness) value to an <see cref="T:SpiralLab.Sirius.AciColor">AciColor</see>.
            </summary>
            <param name="hue">Hue (input values range from 0 to 1).</param>
            <param name="saturation">Saturation percentage (input values range from 0 to 1).</param>
            <param name="lightness">Lightness percentage (input values range from 0 to 1).</param>
            <returns>An <see cref="T:System.Drawing.Color">AciColor</see> that represents the actual HSL value.</returns>
        </member>
        <member name="M:SpiralLab.Sirius.AciColor.ToColor">
            <summary>
            Converts the AciColor to a <see cref="T:System.Drawing.Color">color</see>.
            </summary>
            <returns>A <see cref="T:System.Drawing.Color">System.Drawing.Color</see> that represents the actual AciColor.</returns>
            <remarks>A default color white will be used for ByLayer and ByBlock colors.</remarks>
        </member>
        <member name="M:SpiralLab.Sirius.AciColor.FromColor(System.Drawing.Color)">
            <summary>
            Converts a <see cref="T:System.Drawing.Color">color</see> to an <see cref="T:System.Drawing.Color">AciColor</see>.
            </summary>
            <param name="color">A <see cref="T:System.Drawing.Color">color</see>.</param>
        </member>
        <member name="M:SpiralLab.Sirius.AciColor.ToTrueColor(SpiralLab.Sirius.AciColor)">
            <summary>
            Gets the 24-bit color value from an AciColor.
            </summary>
            <param name="color">A <see cref="T:SpiralLab.Sirius.AciColor">color</see>.</param>
            <returns>A 24-bit color value (BGR order).</returns>
        </member>
        <member name="M:SpiralLab.Sirius.AciColor.FromTrueColor(System.Int32)">
            <summary>
            Gets the <see cref="T:SpiralLab.Sirius.AciColor">color</see> from a 24-bit color value.
            </summary>
            <param name="value">A 24-bit color value (BGR order).</param>
            <returns>A <see cref="T:SpiralLab.Sirius.AciColor">color</see>.</returns>
        </member>
        <member name="M:SpiralLab.Sirius.AciColor.FromCadIndex(System.Int16)">
            <summary>
            Gets the <see cref="T:SpiralLab.Sirius.AciColor">color</see> from an index.
            </summary>
            <param name="index">A CAD indexed AciColor index.</param>
            <returns>A <see cref="T:SpiralLab.Sirius.AciColor">color</see>.</returns>
            <remarks>
            Accepted index values range from 0 to 256. An index 0 represents a ByBlock color and an index 256 is a ByLayer color;
            any other value will return one of the 255 indexed AciColors.
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius.AciColor.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation.
            </summary>
            <returns>The string representation.</returns>
        </member>
        <member name="M:SpiralLab.Sirius.AciColor.Clone">
            <summary>
            Creates a new color that is a copy of the current instance.
            </summary>
            <returns>A new color that is a copy of this instance.</returns>
        </member>
        <member name="M:SpiralLab.Sirius.AciColor.Equals(SpiralLab.Sirius.AciColor)">
            <summary>
            Check if the components of two colors are equal.
            </summary>
            <param name="other">Another color to compare to.</param>
            <returns>True if the three components are equal or false in any other case.</returns>
        </member>
        <member name="M:SpiralLab.Sirius.AciColor.RgbToAci(System.Byte,System.Byte,System.Byte)">
            <summary>
            Obtains the approximate color index from the RGB components.
            </summary>
            <param name="r">Red component.</param>
            <param name="g">Green component.</param>
            <param name="b">Blue component.</param>
            <returns>The approximate color index from the RGB components</returns>
            <remarks>This conversion will never be accurate.</remarks>
        </member>
        <member name="T:SpiralLab.Sirius.Vertex">
            <summary>
            vertex 구조체
            (.NET의 Vector2를 propertygrid 에 출력하기 용이하지 않아, Vector2 와 유사한 기능의 구조체를 만듦
            Points 엔티티 등 에서 사용
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Vertex.Location">
            <summary>
            위치
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.Vertex.#ctor(System.Single,System.Single)">
            <summary>
            생성자
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:SpiralLab.Sirius.Vertex.#ctor(System.Numerics.Vector2)">
            <summary>
            생성자
            </summary>
            <param name="v"></param>
        </member>
        <member name="M:SpiralLab.Sirius.Vertex.Translate(SpiralLab.Sirius.Vertex,System.Single,System.Single)">
            <summary>
            이동량
            </summary>
            <param name="v"></param>
            <param name="dx"></param>
            <param name="dy"></param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.Vertex.Translate(SpiralLab.Sirius.Vertex,System.Numerics.Vector2)">
            <summary>
            이동량
            </summary>
            <param name="v"></param>
            <param name="delta"></param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.Vertex.Rotate(SpiralLab.Sirius.Vertex,System.Single,System.Numerics.Vector2)">
            <summary>
            회전량
            </summary>
            <param name="vertex"></param>
            <param name="angle"></param>
            <param name="rotateCenter"></param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.Vertex.Scale(SpiralLab.Sirius.Vertex,System.Numerics.Vector2)">
            <summary>
            크기변환
            </summary>
            <param name="vertex"></param>
            <param name="scale"></param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.Vertex.Scale(SpiralLab.Sirius.Vertex,System.Numerics.Vector2,System.Numerics.Vector2)">
            <summary>
            크기변환
            </summary>
            <param name="vertex"></param>
            <param name="scale"></param>
            <param name="center"></param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.Vertex.Angle(SpiralLab.Sirius.Vertex,SpiralLab.Sirius.Vertex)">
            <summary>
            두 폴리라인 벡터가 이루는 각도
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.Vertex.Angle(SpiralLab.Sirius.Vertex)">
            <summary>
            지정된 폴리라인 벡터의 회전 각도
            </summary>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="P:SpiralLab.Sirius.Vertex.ToMatrix">
            <summary>
            3x3 행렬로 계산된 결과 리턴
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.Vertex.ToString">
            <summary>
            문자열
            </summary>
            <returns></returns>
        </member>
        <member name="P:SpiralLab.Sirius.Vertex.Zero">
            <summary>
            0 값으로 초기화된 벡터 리턴
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.Block">
            <summary>
            블럭 객체 
            Autocad 의 블럭 기능
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.Block.#ctor">
            <summary>
            생성자
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.Block.#ctor(System.Collections.Generic.List{SpiralLab.Sirius.IEntity})">
            <summary>
            생성자
            </summary>
            <param name="entities"></param>
        </member>
        <member name="T:SpiralLab.Sirius.Blocks">
            <summary>
            블럭 집합 객체
            Autocad의 블럭을 리스트로 관리
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Blocks.Owner">
            <summary>
            부모 문서
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.Blocks.#ctor">
            <summary>
            생성자
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.Blocks.#ctor(SpiralLab.Sirius.IDocument)">
            <summary>
            생성자
            </summary>
            <param name="owner"></param>
        </member>
        <member name="M:SpiralLab.Sirius.Blocks.NameOf(System.String)">
            <summary>
            이름으로 블럭 검색
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.Blocks.Clone">
            <summary>
            블럭들을 모두 복제
            </summary>
            <returns></returns>
        </member>
        <member name="T:SpiralLab.Sirius.IDocument">
            <summary>
            Document 인터페이스
            엔티티, 레이어, 블럭 , 문서정보 등의 통합 데이타를 가지는 도큐먼트 데이타
            (레이저 가공 레시피)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IDocument.Version">
            <summary>
            문서 버전 정보
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IDocument.Name">
            <summary>
            이름
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IDocument.Description">
            <summary>
            설명
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IDocument.FileName">
            <summary>
            파일이름
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IDocument.Action">
            <summary>
            사용자 명령 및 이벤트 액션 객체
            (저장되지 않는 임시 객체)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IDocument.Dimension">
            <summary>
            문서의 중심 위치, 가로및 세로 크기 정보
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IDocument.RotateOffset">
            <summary>
            가공 중심 위치 (= 스캐너 중심위치 = 회전 중심 위치)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IDocument.Views">
            <summary>
            문서(Doc) 에 연결된 뷰 목록 (다중 뷰어를 제공하기 위해 내부적으로 사용됨)
            (저장되지 않는 임시 객체)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IDocument.Blocks">
            <summary>
            블럭 컨테이너  (내부에 복수개의 Block 가 있고, Block 안에 복수개의 Entity 가 있음)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IDocument.Layers">
            <summary>
            레이어 컨테이너 (내부에 복수개의 Layer 가 있고, Layer 안에 복수개의 Entity 가 있음)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IDocument.Tag">
            <summary>
            사용자 정의 데이타
            (저장되지 않는 임시 객체)
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.DocumentDefault">
            <summary>
            IDocument 객체를 실제로 구현한 기본 문서 객체
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.DocumentDefault.Blocks">
            <summary>
            container for blocks
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.DocumentDefault.Layers">
            <summary>
            container for layers
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.DocumentDefault.#ctor">
            <summary>
            생성자
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.DocumentDefault.#ctor(System.String)">
            <summary>
            생성자
            </summary>
            <param name="name">문서 이름</param>
        </member>
        <member name="M:SpiralLab.Sirius.DocumentDefault.Clone">
            <summary>
            문서 복제
            </summary>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.DocumentDefault.Draw(SpiralLab.Sirius.IView)">
            <summary>
            문서 정보를 뷰(IView)에 렌더링
            </summary>
            <param name="view"></param>
        </member>
        <member name="T:SpiralLab.Sirius.DocumentSerializer">
            <summary>
            문서 객체 저장/복원용
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.DocumentSerializer.OpenSirius(System.String)">
            <summary>
            sirius 파일 열기
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.DocumentSerializer.OpenDxf(System.String)">
            <summary>
            dxf 파일 열기
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.DocumentSerializer.Save(SpiralLab.Sirius.IDocument,System.String)">
            <summary>
            sirius 파일로 저장
            </summary>
            <param name="doc"></param>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="T:SpiralLab.Sirius.BarcodeDataMatrix">
            <summary>
            barcode datamatrix entity
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.BarcodeDataMatrix.Clone">
            <summary>
            복사본 생성
            </summary>
            <returns>A new color that is a copy of this instance.</returns>
        </member>
        <member name="M:SpiralLab.Sirius.BarcodeDataMatrix.Mark(SpiralLab.Sirius.IMarkerArg)">
            <summary>
            laser processing
            </summary>
            <param name="markerArg"></param>
            <returns></returns>
        </member>
        <member name="T:SpiralLab.Sirius.BlockInsert">
            <summary>
            블럭 인서트 엔티티 (autocad 의 blockinsert 구현)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.BlockInsert.Angle">
            <summary>
            offset 의 angle 사용된
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.BlockInsert.Clone">
            <summary>
            복사본 생성
            </summary>
            <returns>A new color that is a copy of this instance.</returns>
        </member>
        <member name="T:SpiralLab.Sirius.IPen">
            <summary>
            Pen 인터페이스 (레이저 가공 파라메터를 가지는 펜 인터페이스)
            장비별로 프로젝트 별로 레이저 가공 기법이 다르므로, 펜(IPen)을 상속받아 Pen 객체를 구현
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IPen.Power">
            <summary>
            파워 (W)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IPen.Frequency">
            <summary>
            주파수 (Hz)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IPen.PulseWidth">
            펄스폭 (usec)
        </member>
        <member name="P:SpiralLab.Sirius.IPen.JumpSpeed">
            <summary>
            점프 속도 (mm/s)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IPen.MarkSpeed">
            <summary>
            마크 속도 (mm/s)
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.Layer">
            <summary>
            레이어 객체 (엔티티의 리스트 컨테이너로 동작)
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.Layer.Clone">
            <summary>
            복사본 생성
            </summary>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.Layer.Mark(SpiralLab.Sirius.IMarkerArg)">
            <summary>
            laser processing
            </summary>
            <param name="rtc"></param>
            <param name="laser"></param>
            <returns></returns>
        </member>
        <member name="T:SpiralLab.Sirius.Layers">
            <summary>
            레이어의 집합 객체 (레이어의 리스트 컨테이너로 동작)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Layers.Items">
            <summary>
            레이어들의 배열
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Layers.Active">
            <summary>
            activated layer
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Layers.Owner">
            <summary>
            부모 문서
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Layers.BoundRect">
            <summary>
            레이어 내의 최대 외곽 영역
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.Layers.#ctor">
            <summary>
            생성자
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.Layers.#ctor(SpiralLab.Sirius.IDocument)">
            <summary>
            생성자
            </summary>
            <param name="owner"></param>
        </member>
        <member name="M:SpiralLab.Sirius.Layers.NameOf(System.String)">
            <summary>
            이름으로 레이어 검색
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.Layers.Clone">
            <summary>
            레이어들을 모두 복제
            </summary>
            <returns></returns>
        </member>
        <member name="T:SpiralLab.Sirius.UndoRedoDocumentPropertyChanged">
            <summary>
            문서 속성 변경 
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.UndoRedoEntitiesMove">
            <summary>
            엔티티들 이동
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.UndoRedoEntityAdd">
            <summary>
            엔티티 추가
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.UndoRedoEntityAlign">
            <summary>
            엔티티 정렬
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.UndoRedoEntityCut">
            <summary>
            엔티티 잘라내기
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.UndoRedoEntityDelete">
            <summary>
            엔티티 삭제
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.UndoRedoEntityExplode">
            <summary>
            엔티티 분해
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.UndoRedoEntityGroup">
            <summary>
            엔티티 그룹으로 만들기
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.UndoRedoEntityMove">
            <summary>
            엔티티 이동 (Treeview 에서)
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.UndoRedoEntityPaste">
            <summary>
            엔티티 붙혀넣기
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.UndoRedoEntityPropertyChanged">
            <summary>
            엔티티 속성 변경
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.UndoRedoEntitySelect">
            <summary>
            엔티티 선택
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.UndoRedoEntityTransit">
            <summary>
            엔티티 이동
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.UndoRedoEntityUnGroup">
            <summary>
            엔티티 그룹 해제
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.UndoRedoLayerMove">
            <summary>
            레이어 이동 (TreeView 에서 마우스로 Drag and Drop)
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.IUndoRedo">
            <summary>
             Undo  / Redo 용 인터페이스
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IUndoRedo.Name">
            <summary>
            이름
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.IUndoRedo.Execute">
            <summary>
            redo 실행
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.IUndoRedo.Undo">
            <summary>
            undo 실행
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.IUndoRedo.Redo">
            <summary>
            redo 실행
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.UndoRedoSingle">
            <summary>
             Undo  / Redo 용 싱글(단일) 명령용
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.UndoRedoMultiple">
            <summary>
             Undo / Redo 용 멀티(다중) 명령용 
             (여러개의 IUndoRedo 집합을 하나의 IUndoRedo 로 처리하기위한 컨테이너)
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.UndoRedoLayerActive">
            <summary>
            선택 레이어 활성화
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.PenDefault">
            <summary>
            Pen 엔티티 객체 (기본 버전)
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.PenDefault.Clone">
            <summary>
            복사본 생성
            </summary>
            <returns>A new color that is a copy of this instance.</returns>
        </member>
        <member name="M:SpiralLab.Sirius.PenDefault.Equals(SpiralLab.Sirius.PenDefault)">
            <summary>
            동일성 검사
            </summary>
            <param name="other">Another color to compare to.</param>
            <returns>True if the three components are equal or false in any other case.</returns>
        </member>
        <member name="M:SpiralLab.Sirius.PenDefault.Mark(SpiralLab.Sirius.IMarkerArg)">
            <summary>
            laser processing
            </summary>
            <param name="rtc"></param>
            <param name="laser"></param>
            <returns></returns>
        </member>
        <member name="T:SpiralLab.Sirius.Points">
            <summary>
            점 집합 엔티티
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.Points.Clone">
            <summary>
            복사본 생성
            </summary>
            <returns>A new color that is a copy of this instance.</returns>
        </member>
        <member name="M:SpiralLab.Sirius.Points.Mark(SpiralLab.Sirius.IMarkerArg)">
            <summary>
            laser processing
            </summary>
            <param name="rtc"></param>
            <param name="laser"></param>
            <returns></returns>
        </member>
        <member name="T:SpiralLab.Sirius.Properties.Resources">
            <summary>
              지역화된 문자열 등을 찾기 위한 강력한 형식의 리소스 클래스입니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.ResourceManager">
            <summary>
              이 클래스에서 사용하는 캐시된 ResourceManager 인스턴스를 반환합니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.Culture">
            <summary>
              이 강력한 형식의 리소스 클래스를 사용하여 모든 리소스 조회에 대해 현재 스레드의 CurrentUICulture 속성을
              재정의합니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.add_camera_24px">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.aperture_24px">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.aperture_30px">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.available_updates_filled_50px">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.barcode_24px">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.bottom">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.box_important_64px">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.center">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.circuit_50px">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.construction_worker_30px">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.customer_50px">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.data_matrix_code_50px">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.date">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.detective_24px">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.elderly_person_filled_50px">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.error_64px">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.exercise_filled_50px">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.explode">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.fire_element_48px">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.fire_extinguisher_48px">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.flash_off_24px">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.flash_on_24px">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.font_rotate">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.font_size_16px">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.hand_move">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.hatch">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.hour">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.icons8_about_16">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.icons8_aperture_16">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.icons8_chevron_down_32">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.icons8_chevron_left_32">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.icons8_chevron_right_32">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.icons8_chevron_up">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.icons8_chevron_up_32">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.icons8_chevron_up_321">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.icons8_circle_16">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.icons8_circled_dot_16">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.icons8_circled_left_2_filled_16">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.icons8_coordinate_system_16">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.icons8_copy_16">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.icons8_cutting_coupon_16">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.icons8_define_location_16">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.icons8_delete_file_16">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.icons8_file_16">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.icons8_fountain_pen_16">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.icons8_generic_text_16">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.icons8_halfcircle">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.icons8_import_16">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.icons8_information_16">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.icons8_laser_beam_16">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.icons8_layers_16">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.icons8_line_16">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.icons8_marker_pen_16">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.icons8_opened_folder_16">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.icons8_paper_16">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.icons8_paste_16">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.icons8_pencil_16">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.icons8_polyline_16">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.icons8_rectangle_stroked_16">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.icons8_rectangle_stroked_161">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.icons8_save_16">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.icons8_save_as_16">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.icons8_settings_16">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.icons8_small_lens_16">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.icons8_spring_in_motion_16">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.icons8_timer_16">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.icons8_under_construction_16">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.icons8_under_construction_161">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.icons8_zoom_in_16">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.icons8_zoom_out_filled_16">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.icons8_zoom_to_extents_filled_16">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.image_16px">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.import_50px">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.Journey_32px">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.journey_80px">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.laser_beam_24px">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.left">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.lightning_bolt_16px">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.lightning_bolt_26px">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.live_photos_24px">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.motfbeginend">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.motfdelay">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.motfwait">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.paste_array">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.point">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.points">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.polyline_16px">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.polyline_80px">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.private_48px">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.private_48px1">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.qr_code_24px">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.qr_code_26px">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.redo">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.reset_16px">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.reset_24px">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.right">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.rotate_left">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.rotate_right">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.running_24px">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.running_24px1">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.serial">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.sleeping_in_bed_50px">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.small_lens_32px">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.sort_down_24px">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.sort_up_24px">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.spiral">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.start_48px">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.stop_16px">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.stop_16px1">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.stop_48px">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.table_26px">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.thick_arrow_pointing_down_26px">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.thick_arrow_pointing_up_26px">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.top">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.trepan">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Properties.Resources.wheel_30px">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.IView">
            <summary>
            뷰 인터페이스 (UI 측의 마우스및 윈도우의 이벤트 연결용)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IView.Owner">
            <summary>
            부모 문서 
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IView.Renderer">
            <summary>
            렌더러
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IView.Width">
            <summary>
            clipping client 폭 (픽셀)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IView.Height">
            <summary>
            clipping client 높이 (픽셀)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IView.CameraX">
            <summary>
            렌더 중심 X 위치 (사용자 좌표계)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IView.CameraY">
            <summary>
            렌더 중심 Y 위치 (사용자 좌표계)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IView.ScaleWidth">
            <summary>
            폭 확대 비율 (확대 축소에 사용)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IView.ScaleHeight">
            <summary>
            높이 확대 비율 (확대 축소에 사용)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IView.Scale">
            <summary>
            스케일 비율 
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IView.SelectedBoundRect">
            <summary>
            선택된 개체(entities)들이 이루는 외곽 영역 정보
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IView.RenderTime">
            <summary>
            화면 렌더링(그리기)에 걸린 시간
            msec
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IView.Tag">
            <summary>
            사용자 정의 데이타
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.IView.Render">
            <summary>
            화면 다시 그리기 - 재 렌더링 명령
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.IView.OnDraw">
            <summary>
            다시 그리기 이벤트 
            <returns>렌더링에 걸린 시간 (msec) </returns>
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.IView.OnInitialized(System.Object,System.EventArgs)">
            <summary>
            초기화 이벤트
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SpiralLab.Sirius.IView.OnResized(System.Object,System.EventArgs)">
            <summary>
            클라이언트 창 크기 변경 이벤트
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SpiralLab.Sirius.IView.OnMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            마우스 다운 이벤트
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SpiralLab.Sirius.IView.OnMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            마우스 업 이벤트
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SpiralLab.Sirius.IView.OnMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            마우스 이동 이벤트
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SpiralLab.Sirius.IView.OnMouseWheel(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            마우스 휠 이벤트
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SpiralLab.Sirius.IView.OnZoomIn(System.Drawing.Point)">
            <summary>
            특정 위치를 중심으로 줌 인 이벤트
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:SpiralLab.Sirius.IView.OnZoomOut(System.Drawing.Point)">
            <summary>
            특정 위치를 중심으로 줌 아웃 이벤트
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:SpiralLab.Sirius.IView.OnZoomFit(SpiralLab.Sirius.BoundRect)">
            <summary>
            지정된 영역이 클라이언트 렌더 영역을 가득(약 95%) 채우도록 줌 FIT
            </summary>
            <param name="br"></param>
        </member>
        <member name="M:SpiralLab.Sirius.IView.OnPan(System.Boolean)">
            <summary>
            Pan 기능 사용 유무
            마우스 조작이 어려운 환경에서, 마우스 왼쪽 버튼만으로 카메라 위치를 이동하기 위한 기능 on/off
            </summary>
            <param name="onOff"></param>
        </member>
        <member name="M:SpiralLab.Sirius.IView.OnCameraMove(System.Single,System.Single)">
            <summary>
            클라이언트 영역 중심을 사용자가 원하는 중심으로 재 설정 (자동으로 새로 그려짐)
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:SpiralLab.Sirius.IView.Dp2Lp(System.Drawing.Point,System.Single@,System.Single@)">
            <summary>
            물리 좌표계(pixel) 값을 사용자 좌표계(mm)로 변환
            pixel -> mm
            </summary>
            <param name="p"></param>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.IView.Lp2Dp(System.Single,System.Single,System.Drawing.Point@)">
            <summary>
            사용자 좌표(mm)를 물리 좌표(pixel)로 변환
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="p"></param>
        </member>
        <member name="M:SpiralLab.Sirius.IView.Dp2Lp(System.Int32)">
            <summary>
            해당 물리 좌표값(pixel) 크기를 사용자 좌표 크기(mm)로 변환
            pixel -> mm
            </summary>
            <param name="pixel"></param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.IView.Lp2Dp(System.Single)">
            <summary>
            사용자 좌표(mm) 크기만큼을 물리 좌표(pixel) 크기로 변환
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="F:SpiralLab.Sirius.ViewDefault.mouseCurrentLocation">
            <summary>
            마우스 위치 정보
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.ViewDefault.Dp2Lp(System.Drawing.Point,System.Single@,System.Single@)">
            <summary>
            물리 좌표 -> 사용자 좌표계를 변환
            pixel -> mm
            </summary>
            <param name="p"></param>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.ViewDefault.Dp2Lp(System.Int32)">
            <summary>
            해당 픽셀크기 값을 사용자 좌표(mm)로 변환
            pixel -> mm
            </summary>
            <param name="pixel"></param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.ViewDefault.Lp2Dp(System.Single)">
            <summary>
            사용자 단위 좌표 -> pixel
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.ViewDefault.DrawDragging(SharpGL.OpenGL)">
            <summary>
            마우스를 이용해 엔티티를 Dragging 하는 과정을 렌더링
            </summary>
            <param name="gl"></param>
        </member>
        <member name="M:SpiralLab.Sirius.ViewDefault.DrawDoucmentInfo(SharpGL.OpenGL)">
            <summary>
            문서 정보 렌더링
            </summary>
            <param name="gl"></param>
        </member>
        <member name="M:SpiralLab.Sirius.ViewDefault.DrawAxes(SharpGL.OpenGL)">
            <summary>
            X,Y 축 렌더링
            </summary>
            <param name="gl"></param>
        </member>
        <member name="M:SpiralLab.Sirius.ViewDefault.DrawRubberBand(SharpGL.OpenGL)">
            <summary>
            선택 사각형 (러버 밴딩 효과) 렌더링
            </summary>
            <param name="gl"></param>
        </member>
        <member name="M:SpiralLab.Sirius.ViewDefault.DrawLayers(SharpGL.OpenGL,SpiralLab.Sirius.Layers)">
            <summary>
            모든 레이어 렌더링
            </summary>
            <param name="gl"></param>
            <param name="layers"></param>
        </member>
        <member name="M:SpiralLab.Sirius.ViewDefault.DrawSelectedBoundRect(SharpGL.OpenGL)">
            <summary>
            선택된 엔티티를 아우르는 외곽 사각형 렌더링
            </summary>
            <param name="gl"></param>
        </member>
        <member name="M:SpiralLab.Sirius.ViewDefault.PrepareStartList">
            <summary>
            외부에서 리스트 버퍼 사용시
            </summary>
            <returns></returns>
        </member>
        <member name="T:SpiralLab.Sirius.Arc">
            <summary>
            호 (arc) 엔티티 객체
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.Arc.Clone">
            <summary>
            복사본 생성
            </summary>
            <returns>A new color that is a copy of this instance.</returns>
        </member>
        <member name="T:SpiralLab.Sirius.BoundRect">
            <summary>
            사각형 객체 (엔티티의 외곽 영역 정보 처리)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.BoundRect.Empty">
            <summary>
            크기 데이타를 모두 삭제
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.BoundRect.IsEmpty">
            <summary>
            지정된 데이타가 있는지 여부
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.BoundRect.Left">
            <summary>
            왼쪽 X 좌표값 
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.BoundRect.Right">
            <summary>
            오른쪽 X 좌표값
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.BoundRect.Top">
            <summary>
            상단 Y 좌표값
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.BoundRect.Bottom">
            <summary>
            하단 Y 좌표값
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.BoundRect.Width">
            <summary>
            폭
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.BoundRect.Height">
            <summary>
            높이
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.BoundRect.Center">
            <summary>
            중심 X,Y 위치
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.BoundRect.ToString">
            <summary>
            문자열
            </summary>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.BoundRect.#ctor">
            <summary>
            생성자
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.BoundRect.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            생성자
            </summary>
            <param name="left">좌</param>
            <param name="top">상단</param>
            <param name="right">우</param>
            <param name="bottom">하단</param>
        </member>
        <member name="M:SpiralLab.Sirius.BoundRect.Clone">
            <summary>
            복사본 생성
            </summary>
            <returns>A new color that is a copy of this instance.</returns>
        </member>
        <member name="M:SpiralLab.Sirius.BoundRect.Equals(SpiralLab.Sirius.BoundRect)">
            <summary>
            동일성 검사
            </summary>
            <param name="other">Another color to compare to.</param>
            <returns>True if the three components are equal or false in any other case.</returns>
        </member>
        <member name="M:SpiralLab.Sirius.BoundRect.Clear">
            <summary>
            내부 데이타 리셋 (모두 제거)
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.BoundRect.LocationByAlign(SpiralLab.Sirius.Alignment)">
            <summary>
            정렬에 따른 위치 얻기
            </summary>
            <param name="align">정렬 기준</param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.BoundRect.Union(SpiralLab.Sirius.BoundRect)">
            <summary>
            전달된 boundrect 와의 영역 합치기
            </summary>
            <param name="br"></param>
        </member>
        <member name="M:SpiralLab.Sirius.BoundRect.Union(System.Single,System.Single)">
            <summary>
            전달된 점 위치와 영역 합치기
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:SpiralLab.Sirius.BoundRect.Union(System.Numerics.Vector2)">
            <summary>
            전달된 벡터 위치와 영역 합치기
            </summary>
            <param name="v"></param>
        </member>
        <member name="M:SpiralLab.Sirius.BoundRect.Draw(SharpGL.OpenGL)">
            <summary>
            화면에 그리기
            </summary>
            <param name="gl">Openg 렌더링 객체</param>
        </member>
        <member name="M:SpiralLab.Sirius.BoundRect.Transit(System.Numerics.Vector2)">
            <summary>
            지정된 양 만큼 이동
            </summary>
            <param name="delta"></param>
        </member>
        <member name="M:SpiralLab.Sirius.BoundRect.HitTest(System.Single,System.Single,System.Single)">
            <summary>
            지정된 좌표가 포함되는지 여부 (충돌)
            </summary>
            <param name="x">X 위치 (mm)</param>
            <param name="y">Y 위치 (mm)</param>
            <param name="threshold">문턱값 (mm)</param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.BoundRect.HitTest(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            지정된 사각 영역이 포함되는지 여부 (충돌)
            </summary>
            <param name="left">좌</param>
            <param name="top">상단</param>
            <param name="right">우</param>
            <param name="bottom">하단</param>
            <param name="threshold">문턱값(mm)</param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.BoundRect.HitTest(SpiralLab.Sirius.BoundRect,System.Single)">
            <summary>
            지정된 boundrect 영역이 포함되는지 여부(충돌)
            </summary>
            <param name="br">영역</param>
            <param name="threshold">문턱값(mm)</param>
            <returns></returns>
        </member>
        <member name="T:SpiralLab.Sirius.Circle">
            <summary>
            원 엔티티
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.Circle.Clone">
            <summary>
            복사본 생성
            </summary>
            <returns>A new color that is a copy of this instance.</returns>
        </member>
        <member name="M:SpiralLab.Sirius.Circle.Mark(SpiralLab.Sirius.IMarkerArg)">
            <summary>
            laser processing
            </summary>
            <param name="rtc"></param>
            <param name="laser"></param>
            <returns></returns>
        </member>
        <member name="T:SpiralLab.Sirius.Config">
            <summary>
            라이브러리 내부 전역 환경 변수들
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Config.DocumentVersion">
            <summary>
            버전
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius.Config.DocumentClearColor">
            <summary>
            문서 배경 색상
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius.Config.DocumentAxesColor">
            <summary>
            XY 좌표 색상
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius.Config.DocumentRubberBandRectColor">
            <summary>
            선택 사각 박스(Rubber band) 색상
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius.Config.DocumentSelectedBoundRectColor">
            <summary>
            선택된 외곽 사각형의 색상
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius.Config.DocumentSelectedBoundRectCenterColor">
            <summary>
            선택된 외곽 사각형의 중심 색상
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius.Config.DocumentRotateOriginColor">
            <summary>
            회전 중심 색상
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius.Config.DocumentOriginColor">
            <summary>
            기준점 색상
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius.Config.DocumentBoundRectColor">
            <summary>
            외곽 사각형 색상
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius.Config.EntitySelectedColor">
            <summary>
            엔티티 선택 생상
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius.Config.EntityCenterColor">
            <summary>
            엔티티 중심 색상
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius.Config.EntityGroupOffsetNormalColor">
            <summary>
            그룹 엔티티 오프셋 색상
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius.Config.EntityGroupOffsetSelectedColor">
            <summary>
            그룹 엔티티 오프셋 선택시 색상
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius.Config.EntityArrowColor">
            <summary>
            엔티티 화살표 색상
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius.Config.LaserSpotCrossColor1">
            <summary>
            레이저 가공 경로 시뮬레이션시 사용하는 색상1
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius.Config.AngleFactor">
            <summary>
            호(Arc) 렌더링시 그리는 각도의 최소 단위 (속도 향상)
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius.Config.UndoStackSize">
            <summary>
            언두(Undo) 스택 최대 개수 제한 (메모리 절약을 위해)
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.IEntity">
            <summary>
            엔티티 인터페이스
            
                                     IEntity
                                        |
              IDrawable  _____________  |
                                     |  |
              IExplodable _________  |  |
                                  |  |  |
              IHatchable  ______  |  |  |
                               |  |  |  |
              IMarkerable ___  |  |  |  |
                            |  |  |  |  |
                            |  |  |  |  |
                           [ Your Entitiy ]
            
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IEntity.Owner">
            <summary>
            부모 객체
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IEntity.Name">
            <summary>
            엔티티 이름
            entity name
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IEntity.Description">
            <summary>
            엔티티 설명
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IEntity.BoundRect">
            <summary>
            객체의 외각 사각형 영역
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IEntity.IsSelected">
            <summary>
            엔티티 선택 여부
            entity is selected or not
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IEntity.IsLocked">
            <summary>
            편집 가능 여부
            locked or not
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IEntity.Node">
            <summary>
            트리뷰 노드
            모든 엔티티는 TreeView 에 출력이 가능해야 하기에 Node 를 하나씩 가진다
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IEntity.Index">
            <summary>
            트리뷰 노드 인덱스 번호 = list 에서의 인덱스 번호 (내부적으로 사용됨)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IEntity.Tag">
            <summary>
            사용자 데이타
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.IExplodable">
            <summary>
            Explodable 인터페이스
            분해가 가능한 엔티티가 상속 구현해야 하는 인터페이스
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.IExplodable.Explode">
            <summary>
            분해
            </summary>
            <returns>분해된 엔티티의 리스트</returns>
        </member>
        <member name="T:SpiralLab.Sirius.Group">
            <summary>
            그룹 엔티티 (엔티티를 모아놓은 컨테이너롤 동작)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.Group.IsEnableFastRendering">
            <summary>
            opengl 의 고속 렌더링을 지원하여 렌더링 속도를 올리기 위한 내부 옵션
            false : 모두 새로 그림
            true : openg의 buffer를 이용한 버퍼 그리기 
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.Group.Clone">
            <summary>
            복사본 생성
            </summary>
            <returns>A new color that is a copy of this instance.</returns>
        </member>
        <member name="M:SpiralLab.Sirius.Group.Mark(SpiralLab.Sirius.IMarkerArg)">
            <summary>
            laser processing
            </summary>
            <param name="rtc"></param>
            <param name="laser"></param>
            <returns></returns>
        </member>
        <member name="T:SpiralLab.Sirius.InsertVertex">
            <summary>
            그룹(Group) 엔티티의 offset 처리용
            그룹에서 여러개의 X,Y 위치 배열 정보 처리용
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.InsertVertex.Transit">
            <summary>
            이동량
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.InsertVertex.Scale">
            <summary>
            크기 변화량
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.InsertVertex.Angle">
            <summary>
            회전량 (각도)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.InsertVertex.ToMatrix">
            <summary>
            3x3 행렬 계산값
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.InsertVertex.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            생성자
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="sx"></param>
            <param name="sy"></param>
            <param name="angle"></param>
        </member>
        <member name="M:SpiralLab.Sirius.InsertVertex.ToString">
            <summary>
            객체의 문자열 
            </summary>
            <returns></returns>
        </member>
        <member name="P:SpiralLab.Sirius.InsertVertex.Zero">
            <summary>
            0,0 값으로 생성
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.InsertVertex.DoTransit(SpiralLab.Sirius.InsertVertex,System.Numerics.Vector2)">
            <summary>
            이동
            </summary>
            <param name="vertex"></param>
            <param name="delta"></param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.InsertVertex.Rotate(SpiralLab.Sirius.InsertVertex,System.Single,System.Numerics.Vector2)">
            <summary>
            지정된 회전 중심에서 회전 
            </summary>
            <param name="vertex"></param>
            <param name="angle"></param>
            <param name="rotateCenter"></param>
            <returns></returns>
        </member>
        <member name="T:SpiralLab.Sirius.Line">
            <summary>
            선분 엔티티
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.Line.Clone">
            <summary>
            복사본 생성
            </summary>
            <returns>A new color that is a copy of this instance.</returns>
        </member>
        <member name="M:SpiralLab.Sirius.Line.Mark(SpiralLab.Sirius.IMarkerArg)">
            <summary>
            laser processing
            </summary>
            <param name="rtc"></param>
            <param name="laser"></param>
            <returns></returns>
        </member>
        <member name="P:SpiralLab.Sirius.Line.LineVectorAngle">
            <summary>
            선분 벡터의 각도 (degree : 0~360)
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.Point">
            <summary>
            점 엔티티
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.Point.Clone">
            <summary>
            복사본 생성
            </summary>
            <returns>A new color that is a copy of this instance.</returns>
        </member>
        <member name="M:SpiralLab.Sirius.Point.Mark(SpiralLab.Sirius.IMarkerArg)">
            <summary>
            laser processing
            </summary>
            <param name="rtc"></param>
            <param name="laser"></param>
            <returns></returns>
        </member>
        <member name="T:SpiralLab.Sirius.LwPolyline">
            <summary>
            LW polyline (polyline vertex container)
            임시 객체로 라인 + 호 조합의 Group 으로 최종 변환됨
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius.LwPolyline.explodedList">
            <summary>
            regen 시 polylinevertex 를 explode 하여 저장하는 방식
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.LwPolyline.Clone">
            <summary>
            복사본 생성
            </summary>
            <returns>A new color that is a copy of this instance.</returns>
        </member>
        <member name="M:SpiralLab.Sirius.LwPolyline.ToVertices">
            <summary>
            폴리라인을 개별 정점으로( 호는 직선 집합으로 근사) 생성
            explode -> 점과 호로 
            to vertices -> 점
            </summary>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.LwPolyline.Mark(SpiralLab.Sirius.IMarkerArg)">
            <summary>
            laser processing
            </summary>
            <param name="markerArg"></param>
            <returns></returns>
        </member>
        <member name="T:SpiralLab.Sirius.Rectangle">
            <summary>
            사각형 엔티티
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.Rectangle.Clone">
            <summary>
            복사본 생성
            </summary>
            <returns>A new color that is a copy of this instance.</returns>
        </member>
        <member name="M:SpiralLab.Sirius.Rectangle.Mark(SpiralLab.Sirius.IMarkerArg)">
            <summary>
            markerable
            </summary>
            <param name="rtc"></param>
            <param name="laser"></param>
            <returns></returns>
        </member>
        <member name="T:SpiralLab.Sirius.Spiral">
            <summary>
            나선 엔티티
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.Spiral.Clone">
            <summary>
            복사본 생성
            </summary>
            <returns>A new color that is a copy of this instance.</returns>
        </member>
        <member name="M:SpiralLab.Sirius.Spiral.Mark(SpiralLab.Sirius.IMarkerArg)">
            <summary>
            laser processing
            </summary>
            <param name="rtc"></param>
            <param name="laser"></param>
            <returns></returns>
        </member>
        <member name="T:SpiralLab.Sirius.Alignment">
            <summary>
            정렬 기준
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius.Alignment.LeftTop">
            <summary>
            좌상단
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius.Alignment.MiddleTop">
            <summary>
            중앙 상단
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius.Alignment.RightTop">
            <summary>
            우상단
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius.Alignment.LeftMiddle">
            <summary>
            좌중간
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius.Alignment.Center">
            <summary>
            중앙
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius.Alignment.RightMiddle">
            <summary>
            우중간
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius.Alignment.LeftBottom">
            <summary>
            좌하단
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius.Alignment.MiddleBottom">
            <summary>
            중앙 하단
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius.Alignment.RightBottom">
            <summary>
            우하단
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.LetterSpaceWay">
            <summary>
            자간 간격 
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius.LetterSpaceWay.Variable">
            <summary>
            가변폭
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius.LetterSpaceWay.Fixed">
            <summary>
            고정폭
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.DirectionWay">
            <summary>
            회전 방향
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius.DirectionWay.ClockWise">
            <summary>
            시계방향
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius.DirectionWay.CounterClockWise">
            <summary>
            반 시계방향
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.Barcode1DFormat">
            <summary>
            1D 바코드 포맷
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.BarcodeShapeType">
            <summary>
            바코드 셀(Cell)의 형상
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius.BarcodeShapeType.Dot">
            <summary>
            개별 점
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius.BarcodeShapeType.Line">
            <summary>
            셀간 연결된 선분
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius.BarcodeShapeType.Outline">
            <summary>
            해치가 제외된 외곽 폐곡선
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius.BarcodeShapeType.Hatch">
            <summary>
            Hatch (Line)
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius.BarcodeShapeType.Pattern">
            <summary>
            사용자 정의 패턴
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.IDrawable">
            <summary>
            화면에 출력(렌더)이 가능한 엔티티(Entity)에 대한 인터페이스
            주요기능 : 그리기(렌더링) 및 변환(이동, 회전등), 선택
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IDrawable.IsHighlighted">
            <summary>
            마우스 over 등에 의한 시각 효과 (현재 미지원)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IDrawable.IsDrawPath">
            <summary>
            가공 경로를 나타내는 사각정보 표시여부 (엔티티 선택시 보여짐)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IDrawable.IsVisible">
            <summary>
            화면에 표시 여부
            visible or not
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IDrawable.Color">
            <summary>
            엔티티 색상
            entity ACI(Autocad Color Index) color
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IDrawable.Angle">
            <summary>
            회전량
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.IDrawable.Regen">
            <summary>
            데이타 변경시 혹은 내부 벡터및 외각(boundrect)영역 재 계산이 필요할 경우 등 
            내부데이타 refresh 발생시 호출되어야 하는 함수 (regenerate)
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.IDrawable.Draw(SpiralLab.Sirius.IView)">
            <summary>
            엔티티 렌더링 (by OpenGL)
            </summary>
            <param name="view">대상 뷰</param>
        </member>
        <member name="M:SpiralLab.Sirius.IDrawable.Transit(System.Numerics.Vector2)">
            <summary>
            엔티티 이동
            </summary>
            <param name="delta">이동량 벡터</param>
        </member>
        <member name="M:SpiralLab.Sirius.IDrawable.Rotate(System.Single)">
            <summary>
            자신의 기준점을 중심으로 회전
            </summary>
            <param name="angle">회전 각도</param>
        </member>
        <member name="M:SpiralLab.Sirius.IDrawable.Rotate(System.Single,System.Numerics.Vector2)">
            <summary>
            지점된 회전 중심을 기준으로 회전
            </summary>
            <param name="angle">회전 각도</param>
            <param name="rotateCenter">회전 중심 벡터</param>
        </member>
        <member name="M:SpiralLab.Sirius.IDrawable.Scale(System.Numerics.Vector2)">
            <summary>
            원점을 중심으로 크기 변환
            (내부적으로 사용되므로, 외부사용자는 호출 금지)
            </summary>
            <param name="scale">스케일 (1.0)</param>
        </member>
        <member name="M:SpiralLab.Sirius.IDrawable.Scale(System.Numerics.Vector2,System.Numerics.Vector2)">
            <summary>
            지정된 위치를 중심으로 크기변환
            </summary>
            <param name="scale">스케일 (1.0)</param>
            <param name="scaleCenter">스케일 변환 벡터</param>
        </member>
        <member name="M:SpiralLab.Sirius.IDrawable.HitTest(System.Single,System.Single,System.Single)">
            <summary>
            엔티티 선택 (점으로)
            </summary>
            <param name="x">x 위치 (mm)</param>
            <param name="y">y 위치 (mm)</param>
            <param name="threshold">문턱값 (mm)</param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.IDrawable.HitTest(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            엔티티 선택 (사각 영역으로)
            </summary>
            <param name="left">좌 (mm)</param>
            <param name="top">상 (mm)</param>
            <param name="right">우 (mm)</param>
            <param name="bottom">하 (mm)</param>
            <param name="threshold">문턱값 (mm)</param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.IDrawable.HitTest(SpiralLab.Sirius.BoundRect,System.Single)">
            <summary>
            엔티티 선택 (사각 영역으로)
            </summary>
            <param name="rect">사각 영역</param>
            <param name="threshold">문턱값 (mm)</param>
            <returns></returns>
        </member>
        <member name="T:SpiralLab.Sirius.Text">
            <summary>
            텍스트 엔티티 (TTF 폰트)
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.Text.Clone">
            <summary>
            복사본 생성
            </summary>
            <returns>A new color that is a copy of this instance.</returns>
        </member>
        <member name="M:SpiralLab.Sirius.Text.Mark(SpiralLab.Sirius.IMarkerArg)">
            <summary>
            laser processing
            </summary>
            <param name="markerArg"></param>
            <returns></returns>
        </member>
        <member name="T:SpiralLab.Sirius.Timer">
            <summary>
            타이머 엔티티 (레이저 가공시 엔티티와 엔티티 사이에 삽입되어 시간을 지연하는 용도)
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.Timer.Clone">
            <summary>
            복사본 생성
            </summary>
            <returns>A new color that is a copy of this instance.</returns>
        </member>
        <member name="M:SpiralLab.Sirius.Timer.Equals(SpiralLab.Sirius.Timer)">
            <summary>
            동일성 검사
            </summary>
            <param name="other">Another color to compare to.</param>
            <returns>True if the three components are equal or false in any other case.</returns>
        </member>
        <member name="M:SpiralLab.Sirius.Timer.Mark(SpiralLab.Sirius.IMarkerArg)">
            <summary>
            laser processing
            </summary>
            <param name="rtc"></param>
            <param name="laser"></param>
            <returns></returns>
        </member>
        <member name="F:SpiralLab.Sirius.ArrayForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.ArrayForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpiralLab.Sirius.ArrayForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius.DimensionForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.DimensionForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpiralLab.Sirius.DimensionForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius.HatchForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.HatchForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpiralLab.Sirius.HatchForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius.OffsetsForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.OffsetsForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpiralLab.Sirius.OffsetsForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius.LwPolyLineVertexForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.LwPolyLineVertexForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpiralLab.Sirius.LwPolyLineVertexForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius.InsertVertexForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.InsertVertexForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpiralLab.Sirius.InsertVertexForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius.PasteForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.PasteForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpiralLab.Sirius.PasteForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.MarkerProgressEventHandler">
            <summary>
            가공량 통지용 콜백
            </summary>
            <param name="sender"></param>
            <param name="progress"></param>
        </member>
        <member name="T:SpiralLab.Sirius.MarkerFinishedEventHandler">
            <summary>
            가공완료 콜백
            </summary>
            <param name="sender"></param>
            <param name="span"></param>
        </member>
        <member name="T:SpiralLab.Sirius.IMarker">
            <summary>
            마커 인터페이스
            레이저, 스캐너 등의 하드웨어를 이용해 전달된 가공 데이타(Document) 기반으로 실제 출사를 위해 내부에 쓰레드를 생성하여
            다양한 오프셋 위치에 레이저 가공을 수행하는 마커(Marker) 인터페이스
            </summary>
        </member>
        <member name="E:SpiralLab.Sirius.IMarker.OnProgress">
            <summary>
            진행률 이벤트 핸들러
            </summary>
        </member>
        <member name="E:SpiralLab.Sirius.IMarker.OnFinished">
            <summary>
            완료 이벤트 핸들러
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IMarker.Index">
            <summary>
            식별 번호
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IMarker.Name">
            <summary>
            이름
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IMarker.IsReady">
            <summary>
            가공 준비 상태
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IMarker.IsBusy">
            <summary>
            가공 여부
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IMarker.IsError">
            <summary>
            에러 여부
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IMarker.IsFinished">
            <summary>
            가공 완료 여부
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IMarker.MarkerArg">
            <summary>
            마커 시작시 전달 인자 (Ready 에 의해 업데이트 되고, Start 시 내부적으로 사용됨)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IMarker.Tag">
            <summary>
            사용자 정의 데이타
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.IMarker.Ready(SpiralLab.Sirius.IMarkerArg)">
            <summary>
            마커는 내부 쓰레드에 의해 가공 데이타를 처리하게 되는데, 이때 가공 데이타(IDocument)에 
            크로스 쓰레드 상태가 될수있으므로, 준비(Prepare)시에는 가공 데이타를 모두 복제(Clone) 하여 가공시
            데이타에 대한 쓰레드 안전 접근을 처리하게 된다. 또한 가공중 뷰에 의해 원본 데이타가 조작, 수정되더라도 
            준비(Ready) 즉 신규 데이타를 다운로드하지 않으면 아무런 영향이 없게 된다.
            </summary>
            <param name="doc"></param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.IMarker.Start">
            <summary>
            가공 시작
            </summary>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.IMarker.Stop">
            <summary>
            가공 강제 정지
            </summary>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.IMarker.Reset">
            <summary>
            리셋
            </summary>
            <returns></returns>
        </member>
        <member name="T:SpiralLab.Sirius.IMarkerable">
            <summary>
            Markerable 인터페이스
            레이저 가공이 가능한 엔티티들이 상속구현을 해야 하는 인터페이스
            </summary>    
        </member>
        <member name="P:SpiralLab.Sirius.IMarkerable.IsMarkerable">
            <summary>
            레이저 가공 유무
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.IMarkerable.Repeat">
            <summary>
            반복 가공 회수 (기본값 1)
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.IMarkerable.Mark(SpiralLab.Sirius.IMarkerArg)">
            <summary>
            지정된 Rtc 인터페이스와 Laser 인터페이스를 이용한 엔티티 가공
            </summary>
            <param name="markerArg">IMarkerArg 인터페이스</param>
            <returns></returns>
        </member>
        <member name="T:SpiralLab.Sirius.MarkerDefault">
            <summary>
            마커 객체 (기본 버전)
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.MarkerDefault.Ready(SpiralLab.Sirius.IMarkerArg)">
            <summary>
            마커는 내부 쓰레드에 의해 가공 데이타를 처리하게 되는데, 이때 가공 데이타(IDocument)에 
            크로스 쓰레드 상태가 될수있으므로, 준비(Prepare)시에는 가공 데이타를 모두 복제(Clone) 하여 가공시
            데이타에 대한 쓰레드 안전 접근을 처리하게 된다. 또한 가공중 뷰에 의해 원본 데이타가 조작, 수정되더라도 
            준비(Ready) 즉 신규 데이타를 다운로드하지 않으면 아무런 영향이 없게 된다.
            </summary>
            <param name="markerArg">가공 인자</param>
            <returns></returns>
        </member>
        <member name="T:SpiralLab.Sirius.FreeTypeHelper">
            <summary>
            TTF 폰트 헬퍼 (Freetype2 라이브러리 기반)
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.MathHelper">
            <summary>
            수학 유틸리티 
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius.MathHelper.DegToRad">
            <summary>
            Constant to transform an angle between degrees and radians.
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius.MathHelper.RadToDeg">
            <summary>
            Constant to transform an angle between degrees and radians.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.MathHelper.Epsilon">
            <summary>
            Represents the smallest number used for comparison purposes.
            </summary>
            <remarks>
            The epsilon value must be a positive number greater than zero.
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius.MathHelper.Sign(System.Single)">
            <summary>
            Returns a value indicating the sign of a double-precision floating-point number.
            </summary>
            <param name="number">Double precision number.
            </param>
            <returns>
            A number that indicates the sign of value.
            Return value Meaning -1 value is less than zero.
            0 value is equal to zero.
            1 value is greater than zero.
            </returns>
            <remarks>This method will test for values of numbers very close to zero.</remarks>
        </member>
        <member name="M:SpiralLab.Sirius.MathHelper.Sign(System.Single,System.Single)">
            <summary>
            Returns a value indicating the sign of a double-precision floating-point number.
            </summary>
            <param name="number">Double precision number.
            <param name="threshold">Tolerance.</param>
            </param>
            <returns>
            A number that indicates the sign of value.
            Return value Meaning -1 value is less than zero.
            0 value is equal to zero.
            1 value is greater than zero.
            </returns>
            <remarks>This method will test for values of numbers very close to zero.</remarks>
        </member>
        <member name="M:SpiralLab.Sirius.MathHelper.IsOne(System.Single)">
            <summary>
            Checks if a number is close to one.
            </summary>
            <param name="number">Double precision number.</param>
            <returns>True if its close to one or false in any other case.</returns>
        </member>
        <member name="M:SpiralLab.Sirius.MathHelper.IsOne(System.Single,System.Single)">
            <summary>
            Checks if a number is close to one.
            </summary>
            <param name="number">Double precision number.</param>
            <param name="threshold">Tolerance.</param>
            <returns>True if its close to one or false in any other case.</returns>
        </member>
        <member name="M:SpiralLab.Sirius.MathHelper.IsZero(System.Single)">
            <summary>
            Checks if a number is close to zero.
            </summary>
            <param name="number">Double precision number.</param>
            <returns>True if its close to one or false in any other case.</returns>
        </member>
        <member name="M:SpiralLab.Sirius.MathHelper.IsZero(System.Single,System.Single)">
            <summary>
            Checks if a number is close to zero.
            </summary>
            <param name="number">Double precision number.</param>
            <param name="threshold">Tolerance.</param>
            <returns>True if its close to one or false in any other case.</returns>
        </member>
        <member name="M:SpiralLab.Sirius.MathHelper.IsEqual(System.Single,System.Single)">
            <summary>
            Checks if a number is equal to another.
            </summary>
            <param name="a">Double precision number.</param>
            <param name="b">Double precision number.</param>
            <returns>True if its close to one or false in any other case.</returns>
        </member>
        <member name="M:SpiralLab.Sirius.MathHelper.IsEqual(System.Single,System.Single,System.Single)">
            <summary>
            Checks if a number is equal to another.
            </summary>
            <param name="a">Double precision number.</param>
            <param name="b">Double precision number.</param>
            <param name="threshold">Tolerance.</param>
            <returns>True if its close to one or false in any other case.</returns>
        </member>
        <member name="M:SpiralLab.Sirius.MathHelper.NormalizeAngle(System.Single)">
            <summary>
            Normalizes the value of an angle in degrees between [0, 360[.
            </summary>
            <param name="angle">Angle in degrees.</param>
            <returns>The equivalent angle in the range [0, 360[.</returns>
            <remarks>Negative angles will be converted to its positive equivalent.</remarks>
        </member>
        <member name="M:SpiralLab.Sirius.MathHelper.PointLength(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            두 점간 거리
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.MathHelper.IntersectPointInCircle(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            점이 원안에 포함되는지 여부
            </summary>
            <param name="px"></param>
            <param name="py"></param>
            <param name="cx"></param>
            <param name="cy"></param>
            <param name="radius"></param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.MathHelper.IntersectPointInRect(SpiralLab.Sirius.BoundRect,System.Double,System.Double,System.Double)">
            <summary>
            점이 사각형 영역 내에 포함되어 있는지 여부
            </summary>
            <param name="br"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="limit"></param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.MathHelper.IntersectPointInLine(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            점이 직선과 교차(충돌) 혹은 근접하는지 여부
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="px"></param>
            <param name="py"></param>
            <param name="limit"></param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.MathHelper.IntersectLineInCircle(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            직선이 원과 교차(충돌) 혹은 근접하는지 여부
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="cx"></param>
            <param name="cy"></param>
            <param name="radius"></param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.MathHelper.IntersectLineInLine(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            직선과 직선이 교차(충돌) 하는지 여부
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="x3"></param>
            <param name="y3"></param>
            <param name="x4"></param>
            <param name="y4"></param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.MathHelper.IntersectLineInLine(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double@,System.Double@)">
            <summary>
            직선과 직선이 교차(충돌) 하는지 여부 (교차점 구하기)
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="x3"></param>
            <param name="y3"></param>
            <param name="x4"></param>
            <param name="y4"></param>
            <param name="collisionX"></param>
            <param name="collisionY"></param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.MathHelper.IntersectLineInRect(SpiralLab.Sirius.BoundRect,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            직선이 사각형 영역 내에 있던가, 혹은 모서리의 일부가 교차(포함)하는지 여부
            </summary>
            <param name="br"></param>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.MathHelper.IntersectRectInRect(SpiralLab.Sirius.BoundRect,SpiralLab.Sirius.BoundRect,System.Double)">
            <summary>
            두 사각형이 일부라도 교차(교집합) 혹은 포함되는지 여부
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius.MathHelper.CollisionRectWithRect(SpiralLab.Sirius.BoundRect,SpiralLab.Sirius.BoundRect)">
            <summary>
            두 사각형이 일부라도 교차(교집합) 여부 (포함은 제외?)
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="T:SpiralLab.Sirius.ObservableList`1">
            <summary>
            리스트 제네릭 컨테이너 + 추가 삭제에 대한 이벤트 통지 기능
            thread unsafe 컨테이너
            </summary>
            <typeparam name="T">데이타 타입</typeparam>
        </member>
        <member name="T:SpiralLab.Sirius.ObservableList`1.BeforeAddItemEventHandler">
            <summary>
            아이템 추가전 이벤트 핸들러 델리게이트
            </summary>
            <param name="sender"></param>
            <param name="index"></param>
            <param name="e"></param>
        </member>
        <member name="T:SpiralLab.Sirius.ObservableList`1.AddItemEventHandler">
            <summary>
            아이템 추가 후 이벤트 핸들러 델리게이트
            </summary>
            <param name="sender"></param>
            <param name="index"></param>
            <param name="e"></param>
        </member>
        <member name="T:SpiralLab.Sirius.ObservableList`1.BeforeRemoveItemEventHandler">
            <summary>
            아이템 삭제전 이벤트 핸들러 델리게이트
            </summary>
            <param name="sender"></param>
            <param name="index"></param>
            <param name="e"></param>
        </member>
        <member name="T:SpiralLab.Sirius.ObservableList`1.RemoveItemEventHandler">
            <summary>
            아이템 삭제후 이벤트 핸들러 델리게이트
            </summary>
            <param name="sender"></param>
            <param name="index"></param>
            <param name="e"></param>
        </member>
        <member name="E:SpiralLab.Sirius.ObservableList`1.OnBeforeAddItem">
            <summary>
            추가전 이벤트 핸들러
            </summary>
        </member>
        <member name="E:SpiralLab.Sirius.ObservableList`1.OnAddItem">
            <summary>
            추가후 이벤트 핸들러
            </summary>
        </member>
        <member name="E:SpiralLab.Sirius.ObservableList`1.OnBeforeRemoveItem">
            <summary>
            삭제전 이벤트 핸들러
            </summary>
        </member>
        <member name="E:SpiralLab.Sirius.ObservableList`1.OnRemoveItem">
            <summary>
            삭제후 이벤트 핸들러
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.ObservableList`1.#ctor">
            <summary>
            Initializes a new instance of <c>ObservableCollection</c>.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.ObservableList`1.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of <c>ObservableCollection</c> and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of items the collection can initially store.</param>
        </member>
        <member name="P:SpiralLab.Sirius.ObservableList`1.Item(System.Int32)">
            <summary>
            Gets or sets the object at the specified index.
            </summary>
            <param name="index"> The zero-based index of the element to get or set.</param>
            <returns>The object at the specified index.</returns>
        </member>
        <member name="P:SpiralLab.Sirius.ObservableList`1.Count">
            <summary>
            Gets the number of object contained in the collection.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.ObservableList`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.ObservableList`1.Reverse">
            <summary>
            Reverses the order of the elements in the entire list.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.ObservableList`1.Sort(System.Comparison{`0})">
            <summary>
            Sorts the elements in the entire System.Collections.Generic.List&lt;T&gt; using the specified System.Comparison&lt;T&gt;.
            </summary>
            <param name="comparision">The System.Comparison&lt;T&gt; to use when comparing elements.</param>
        </member>
        <member name="M:SpiralLab.Sirius.ObservableList`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
            <summary>
            Sorts the elements in a range of elements in System.Collections.Generic.List&lt;T&gt; using the specified comparer.
            </summary>
            <param name="index">The zero-based starting index of the range to sort.</param>
            <param name="count">The length of the range to sort.</param>
            <param name="comparer">The System.Collections.Generic.IComparer&lt;T&gt; implementation to use when comparing elements, or null to use the default comparer System.Collections.Generic.Comparer&lt;T&gt;.Default.</param>
        </member>
        <member name="M:SpiralLab.Sirius.ObservableList`1.Sort(System.Collections.Generic.IComparer{`0})">
            <summary>
            Sorts the elements in a range of elements in System.Collections.Generic.List&lt;T&gt; using the specified comparer.
            </summary>
            <param name="comparer">The System.Collections.Generic.IComparer&lt;T&gt; implementation to use when comparing elements, or null to use the default comparer System.Collections.Generic.Comparer&lt;T&gt;.Default.</param>
        </member>
        <member name="M:SpiralLab.Sirius.ObservableList`1.Sort">
            <summary>
            Sorts the elements in the entire System.Collections.Generic.List&lt;T&gt; using the default comparer.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.ObservableList`1.Add(`0)">
            <summary>
            Adds an object to the collection.
            </summary>
            <param name="item"> The object to add to the collection.</param>
            <returns>True if the object has been added to the collection, or false otherwise.</returns>
        </member>
        <member name="M:SpiralLab.Sirius.ObservableList`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds an object list to the end of the collection.
            </summary>
            <param name="collection">The collection whose elements should be added.</param>
        </member>
        <member name="M:SpiralLab.Sirius.ObservableList`1.Insert(System.Int32,`0)">
            <summary>
            Inserts an object into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which item should be inserted.</param>
            <param name="item">The object to insert. The value can not be null.</param>
            <returns>True if the object has been inserted to the collection; otherwise, false.</returns>
        </member>
        <member name="M:SpiralLab.Sirius.ObservableList`1.Remove(`0)">
            <summary>
            Removes the first occurrence of a specific object from the collection
            </summary>
            <param name="item">The object to remove from the collection.</param>
            <returns>True if object is successfully removed; otherwise, false.</returns>
        </member>
        <member name="M:SpiralLab.Sirius.ObservableList`1.Remove(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Removes the first occurrence of a specific object from the collection
            </summary>
            <param name="items">The list of objects to remove from the collection.</param>
            <returns>True if object is successfully removed; otherwise, false.</returns>
        </member>
        <member name="M:SpiralLab.Sirius.ObservableList`1.RemoveAt(System.Int32)">
            <summary>
            Removes the object at the specified index of the collection.
            </summary>
            <param name="index">The zero-based index of the object to remove.</param>
        </member>
        <member name="M:SpiralLab.Sirius.ObservableList`1.Clear">
            <summary>
            Removes all object from the collection.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.ObservableList`1.IndexOf(`0)">
            <summary>
            Searches for the specified object and returns the zero-based index of the first occurrence within the entire collection.
            </summary>
            <param name="item">The object to locate in the collection.</param>
            <returns>The zero-based index of the first occurrence of item within the entire collection, if found; otherwise, –1.</returns>
        </member>
        <member name="M:SpiralLab.Sirius.ObservableList`1.Contains(`0)">
            <summary>
            Determines whether an object is in the collection.
            </summary>
            <param name="item">The object to locate in the collection.</param>
            <returns>True if item is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:SpiralLab.Sirius.ObservableList`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the entire collection to a compatible one-dimensional array, starting at the specified index of the target array.
            </summary>
            <param name="array"> The one-dimensional System.Array that is the destination of the elements copied from the collection. The System.Array must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:SpiralLab.Sirius.ObservableList`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:SpiralLab.Sirius.FloatTypeConverter">
            <summary>
            부동소수점 변환기
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.Vector2Converter">
            <summary>
            Numerics.Vector2 변환기
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.Vector3Converter">
            <summary>
            Vector2 타입 변환기
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.OffsetTypeConverter">
            <summary>
            Offset 타입 변환기
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.DimensionEditor">
            <summary>
            문서 Dimension 변환기
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.AciColorEditor">
            <summary>
            ACI Color 객체 색상 변환기
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.InsertVertexEditor">
            <summary>
            InsertVertex 변환기
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.OffsetsEditor">
            <summary>
            offsets 배열 변환기 (group)
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.LwPolyLineVertexEditor">
            <summary>
            LW 폴리라인 버텍스 변환기
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.FontStringConverter">
            <summary>
            ttf 폰트 디렉토리 목록 변환기
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.SiriusFontStringConverter">
            <summary>
            cxf 폰트 디렉토리 목록 변환기
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.UiHelper">
            <summary>
            UI 유틸리티 기능들
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius.AboutForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.AboutForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpiralLab.Sirius.AboutForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius.MarkerForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.MarkerForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpiralLab.Sirius.MarkerForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius.PropertyForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.PropertyForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpiralLab.Sirius.PropertyForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.SiriusDocumentSourceChanged">
            <summary>
            뷰어가 렌더링할 대상 소스 문서가 변경되었을때를 처리하는 델리게이트
            </summary>
            <param name="sender"></param>
            <param name="doc"></param>
        </member>
        <member name="T:SpiralLab.Sirius.SiriusDocumentNew">
            <summary>
            문서 새로 만들기
            </summary>
            <param name="sender"></param>
        </member>
        <member name="T:SpiralLab.Sirius.SiriusDocumentOpen">
            <summary>
            문서 열기
            </summary>
            <param name="sender"></param>
        </member>
        <member name="T:SpiralLab.Sirius.SiriusDocumentSave">
            <summary>
            문서 저장
            </summary>
            <param name="sender"></param>
        </member>
        <member name="T:SpiralLab.Sirius.SiriusDocumentSaveAs">
            <summary>
            문서 다름이름으로 저장
            </summary>
            <param name="sender"></param>
        </member>
        <member name="T:SpiralLab.Sirius.SiriusEditorForm">
            <summary>
            가공 데이타 (Document)를 화면에 출력및 사용자의 이벤트에 의해 데이타를 변경하는 등의 에디터및 뷰어 기능을 수행
            .NET Framework 의 WinForm 을 기반으로 하고 있으며, 사용자 정의 컨트롤로 제공되어진다.
            이 dll 은 사용자 정의 컨트롤로 제작되어 있으므로 이을 사용하기 위해서는 Visual Studio 의 도구상자에 등록한다.
            등록 방법 : 도구상자 -> 마우스 오른쪽 버튼 -> 항목선택 -> .NET FRAMEWORK 구성요소 -> 찾아보기 -> 해당 .dll 파일 선택 -> SiriusEditorForm 이 등록됨
            </summary>
        </member>
        <member name="E:SpiralLab.Sirius.SiriusEditorForm.OnDocumentSourceChanged">
            <summary>
            문서(Document) 가 변경되었을때 발생하는 이벤트
            </summary>
        </member>
        <member name="E:SpiralLab.Sirius.SiriusEditorForm.OnDocumentNew">
            <summary>
            문서(Document)를 신규로 생성할때 발생하는 이벤트
            Document.Action.ActNew() 가 호출되어야 함
            </summary>
        </member>
        <member name="E:SpiralLab.Sirius.SiriusEditorForm.OnDocumentOpen">
            <summary>
            문서(Document)가 로드될때 발생하는 이벤트
            DocumentSerializer.OpenSirius(파일이름) 으로 불러들인후 Document 에 문서객체를 설정
            </summary>
        </member>
        <member name="E:SpiralLab.Sirius.SiriusEditorForm.OnDocumentSave">
            <summary>
            문서(Document)가 저장될때 발생하는 이벤트
            미리 지정된 파일이름(FileName)에 덮어쓰기 저장됨
            Document.Action.ActSave(파일이름) 가 호출되어야 함
            </summary>
        </member>
        <member name="E:SpiralLab.Sirius.SiriusEditorForm.OnDocumentSaveAs">
            문서(Document)가 다른이름으로 저장될때 발생하는 이벤트
            Document.Action.ActSave(파일이름) 가 호출되어야 함
            파일이름(FileName ) 속성 변경이 호출되어야 함
        </member>
        <member name="P:SpiralLab.Sirius.SiriusEditorForm.Index">
            <summary>
            식별 번호
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.SiriusEditorForm.AliasName">
            <summary>
            상태바에 출력되는 이름
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.SiriusEditorForm.Progress">
            <summary>
            상태바에 출력되는 진행상태 (0~100)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.SiriusEditorForm.FileName">
            <summary>
            상태바에 출력되는 작업 파일이름
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.SiriusEditorForm.View">
            <summary>
            뷰 객체
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.SiriusEditorForm.Document">
            <summary>
            문서 컨테이너 객체
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.SiriusEditorForm.Rtc">
            <summary>
            RTC 제어 객체
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.SiriusEditorForm.Laser">
            <summary>
            레이저 소스 제어 객체
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.SiriusEditorForm.Marker">
            <summary>
            마커 제어 객체
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.SiriusEditorForm.HidePropertyGrid">
            <summary>
            오른쪽 속성창 보여주기 여부
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.SiriusEditorForm.#ctor">
            <summary>
            생성자
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.SiriusEditorForm.Action_OnSelectedEntityChanged(SpiralLab.Sirius.IDocument,System.Collections.Generic.List{SpiralLab.Sirius.IEntity})">
            <summary>
            마우스 선택, 트리뷰 선택 등의 이벤트 발생시 내부 action 에 의해 콜백됨
            </summary>
            <param name="doc"></param>
            <param name="list"></param>
        </member>
        <member name="M:SpiralLab.Sirius.SiriusEditorForm.trvEntity_AfterSelect(System.Object,System.Windows.Forms.TreeViewEventArgs)">
            <summary>
            트리뷰에서 엔티티 선택시
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:SpiralLab.Sirius.SiriusEditorForm.components">
            <summary> 
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.SiriusEditorForm.Dispose(System.Boolean)">
            <summary> 
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:SpiralLab.Sirius.SiriusEditorForm.InitializeComponent">
            <summary> 
            디자이너 지원에 필요한 메서드입니다. 
            이 메서드의 내용을 코드 편집기로 수정하지 마세요.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius.SiriusViewerForm">
            <summary>
            가공 데이타 (Document)를 화면에 출력하는 뷰어 기능 (편집 불가)
            .NET Framework 의 WinForm 을 기반으로 하고 있으며, 사용자 정의 컨트롤로 제공되어진다.
            이 dll 은 사용자 정의 컨트롤로 제작되어 있으므로 이을 사용하기 위해서는 Visual Studio 의 도구상자에 등록한다.
            등록 방법 : 도구상자 -> 마우스 오른쪽 버튼 -> 항목선택 -> .NET FRAMEWORK 구성요소 -> 찾아보기 -> 해당 .dll 파일 선택 -> SiriusViewerForm 이 등록됨
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.SiriusViewerForm.Index">
            <summary>
            식별 번호
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.SiriusViewerForm.AliasName">
            <summary>
            상태바에 출력되는 이름
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.SiriusViewerForm.Progress">
            <summary>
            상태바에 출력되는 진행상태 (0~100)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.SiriusViewerForm.FileName">
            <summary>
            상태바에 출력되는 작업 파일이름
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.SiriusViewerForm.View">
            <summary>
            뷰 객체
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius.SiriusViewerForm.Document">
            <summary>
            문서 컨테이너 객체
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.SiriusViewerForm.#ctor">
            <summary>
            생성자
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius.SiriusViewerForm.components">
            <summary> 
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius.SiriusViewerForm.Dispose(System.Boolean)">
            <summary> 
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:SpiralLab.Sirius.SiriusViewerForm.InitializeComponent">
            <summary> 
            디자이너 지원에 필요한 메서드입니다. 
            이 메서드의 내용을 코드 편집기로 수정하지 마세요.
            </summary>
        </member>
        <member name="T:SpiralLab.MultiSelectTreeview">
            <summary>
            original author : https://www.codeproject.com/Articles/20581/Multiselect-Treeview-Implementation
            revisied by labspiral@gmail.com
            </summary>
        </member>
    </members>
</doc>
